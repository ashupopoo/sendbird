{"version":3,"names":["_message","require","_file","_common","isNewMessage","msg","currentUserId","myMessage","isMyMessage","isAdminMessage","updatedAt","isSendableMessage","undefined","_msg$sender","arguments","length","sender","userId","sendingStatus","messageKeyExtractor","message","getMessageUniqId","messageComparator","a","b","aStatusOffset","bStatusOffset","createdAt","hasSameSender","_a$sender","_b$sender","calcMessageGrouping","groupEnabled","curr","prev","next","getPrev","getMessageTimeFormat","Date","getNext","groupWithPrev","groupWithNext","isUserMessage","isFileMessage","String","messageId","reqId","getAvailableUriFromFileMessage","url","messageParams","file","uri","isSendbirdNotification","dataPayload","Boolean","parseSendbirdNotification","sendbird","JSON","parse","shouldRenderReaction","channel","reactionEnabled","isOpenChannel","isGroupChannel","isBroadcast","isSuper","getReactionCount","reaction","userIds","getFileTypeFromMessage","getFileType","type","getFileExtension","name","getMessageType","ogMetaData","fileType","getDefaultMessageSearchQueryParams","keyword","channelUrl","messageTimestampFrom","Math","max","joinedAt","invitedAt","order","MessageSearchOrder","TIMESTAMP"],"sources":["message.ts"],"sourcesContent":["import { MessageSearchOrder } from '@sendbird/chat/message';\n\nimport { getFileExtension, getFileType } from '../shared/file';\nimport type {\n  SendbirdBaseChannel,\n  SendbirdBaseMessage,\n  SendbirdDataPayload,\n  SendbirdFileMessage,\n  SendbirdGroupChannel,\n  SendbirdMessage,\n  SendbirdReaction,\n  SendbirdSendableMessage,\n} from '../types';\nimport { getMessageTimeFormat } from '../ui-format/common';\n\nexport function isNewMessage(msg: SendbirdMessage, currentUserId?: string) {\n  const myMessage = isMyMessage(msg, currentUserId);\n  if (myMessage) return false;\n  if (msg.isAdminMessage()) return false;\n  return msg.updatedAt === 0;\n}\n\nexport function isSendableMessage(msg?: SendbirdMessage | null): msg is SendbirdSendableMessage {\n  return msg !== undefined && msg !== null && 'sendingStatus' in msg;\n}\n\nexport function isMyMessage(msg?: SendbirdMessage | null, currentUserId = '##__USER_ID_IS_NOT_PROVIDED__##') {\n  if (!isSendableMessage(msg)) return false;\n  return (\n    ('sender' in msg && msg.sender?.userId === currentUserId) ||\n    msg.sendingStatus === 'pending' ||\n    msg.sendingStatus === 'failed' ||\n    msg.sendingStatus === 'canceled'\n  );\n}\n\nexport function messageKeyExtractor(message: SendbirdMessage): string {\n  return getMessageUniqId(message);\n}\n\n// |-------------------|-------------------|-----------------|-------------------|\n// |   sending status  |       reqId       |    messageId    |     createdAt     |\n// |-------------------|-------------------|-----------------|-------------------|\n// |     pending       |    timestamp(A)   |        0        |    timestamp(B)   |\n// |     canceled      |    timestamp(A)   |        0        |         ?         |\n// |     failed        |    timestamp(A)   |        0        |         ?         |\n// |     succeeded     | timestamp(A) / '' |    id from DB   |    timestamp(C)   |\n// |-------------------|-------------------|-----------------|-------------------|\nexport function messageComparator(a: SendbirdMessage, b: SendbirdMessage) {\n  let aStatusOffset = 0;\n  let bStatusOffset = 0;\n\n  if (isSendableMessage(a) && a.sendingStatus !== 'succeeded') aStatusOffset = 999999;\n  if (isSendableMessage(b) && b.sendingStatus !== 'succeeded') bStatusOffset = 999999;\n\n  return b.createdAt + bStatusOffset - (a.createdAt + aStatusOffset);\n}\n\nexport function hasSameSender(a?: SendbirdMessage, b?: SendbirdMessage) {\n  if (!a || !b) return false;\n  if ('sender' in a && 'sender' in b) return a.sender?.userId === b.sender?.userId;\n  return false;\n}\n\nexport function calcMessageGrouping(\n  groupEnabled: boolean,\n  curr: SendbirdMessage,\n  prev?: SendbirdMessage,\n  next?: SendbirdMessage,\n) {\n  const getPrev = () => {\n    if (!groupEnabled) return false;\n    if (!prev) return false;\n    if (curr.isAdminMessage()) return false;\n    if (!hasSameSender(curr, prev)) return false;\n    if (getMessageTimeFormat(new Date(curr.createdAt)) !== getMessageTimeFormat(new Date(prev.createdAt))) return false;\n    return true;\n  };\n\n  const getNext = () => {\n    if (!groupEnabled) return false;\n    if (!next) return false;\n    if (curr.isAdminMessage()) return false;\n    if (!hasSameSender(curr, next)) return false;\n    if (getMessageTimeFormat(new Date(curr.createdAt)) !== getMessageTimeFormat(new Date(next.createdAt))) return false;\n    return true;\n  };\n\n  return { groupWithPrev: getPrev(), groupWithNext: getNext() };\n}\n\nexport function getMessageUniqId(msg: SendbirdBaseMessage) {\n  if (msg.isUserMessage() || msg.isFileMessage()) {\n    if (msg.sendingStatus === 'succeeded') return String(msg.messageId);\n    return msg.reqId;\n  }\n\n  return String(msg.messageId);\n}\n\nexport function getAvailableUriFromFileMessage(message: SendbirdFileMessage) {\n  if (!message.url && message.messageParams.file && 'uri' in message.messageParams.file) {\n    return message.messageParams.file.uri;\n  }\n  return message.url;\n}\n\ntype RawSendbirdDataPayload = { sendbird: string | object };\nexport function isSendbirdNotification(dataPayload?: {\n  [key: string]: string | object;\n}): dataPayload is RawSendbirdDataPayload {\n  if (!dataPayload) return false;\n  return Boolean(dataPayload['sendbird']);\n}\n\nexport function parseSendbirdNotification(dataPayload: RawSendbirdDataPayload): SendbirdDataPayload {\n  return typeof dataPayload.sendbird === 'string' ? JSON.parse(dataPayload.sendbird) : dataPayload.sendbird;\n}\n\nexport function shouldRenderReaction(channel: SendbirdBaseChannel, reactionEnabled: boolean) {\n  if (channel.isOpenChannel()) {\n    return false;\n  }\n\n  if (channel.isGroupChannel()) {\n    if (channel.isBroadcast) return false;\n    if (channel.isSuper) return false;\n  }\n\n  return reactionEnabled;\n}\n\nexport function getReactionCount(reaction: SendbirdReaction) {\n  return reaction.userIds.length;\n}\n\ntype MessageType =\n  | 'user'\n  | 'admin'\n  | 'file'\n  | 'unknown'\n  | `user.${'opengraph'}`\n  | `file.${'image' | 'video' | 'audio'}`;\n\nexport function getFileTypeFromMessage(message: SendbirdFileMessage) {\n  return getFileType(message.type || getFileExtension(message.name));\n}\n\nexport function getMessageType(message: SendbirdMessage): MessageType {\n  if (message.isAdminMessage()) {\n    return 'admin';\n  }\n\n  if (message.isUserMessage()) {\n    if (message.ogMetaData) {\n      return 'user.opengraph';\n    }\n    return 'user';\n  }\n\n  if (message.isFileMessage()) {\n    const fileType = getFileTypeFromMessage(message);\n    switch (fileType) {\n      case 'image':\n      case 'video': {\n        return `file.${fileType}`;\n      }\n      case 'audio': {\n        return `file.${fileType}`;\n      }\n      default: {\n        return 'file';\n      }\n    }\n  }\n\n  return 'unknown';\n}\n\nexport function getDefaultMessageSearchQueryParams(channel: SendbirdGroupChannel, keyword: string) {\n  return {\n    keyword,\n    channelUrl: channel.url,\n    messageTimestampFrom: Math.max(channel.joinedAt, channel.invitedAt),\n    order: MessageSearchOrder.TIMESTAMP,\n  };\n}\n"],"mappings":"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"}