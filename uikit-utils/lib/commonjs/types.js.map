{"version":3,"names":[],"sources":["types.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\nimport type React from 'react';\n\nimport type SendbirdChat from '@sendbird/chat';\nimport type {\n  BaseChannel,\n  Emoji,\n  EmojiCategory,\n  EmojiContainer,\n  Participant,\n  RestrictedUser,\n  SendbirdError as SBError,\n  User,\n  UserUpdateParams,\n} from '@sendbird/chat';\nimport type {\n  GroupChannel,\n  GroupChannelCollection,\n  GroupChannelCreateParams,\n  GroupChannelListQuery,\n  GroupChannelModule,\n  GroupChannelUpdateParams,\n  Member,\n  MessageCollection,\n} from '@sendbird/chat/groupChannel';\nimport type {\n  ModuleNamespaces,\n  OpenChannelCreateParams,\n  OpenChannelUpdateParams,\n  SendableMessage,\n} from '@sendbird/chat/lib/__definition';\nimport type {\n  AdminMessage,\n  BaseMessage,\n  FileMessage,\n  FileMessageCreateParams,\n  FileMessageUpdateParams,\n  MessageSearchQuery,\n  PreviousMessageListQuery,\n  Reaction,\n  UserMessage,\n  UserMessageCreateParams,\n  UserMessageUpdateParams,\n} from '@sendbird/chat/message';\nimport type { OpenChannel, OpenChannelListQuery, OpenChannelModule } from '@sendbird/chat/openChannel';\n\nexport type FilterByValueType<T extends object, Type> = {\n  [K in keyof T as T[K] extends Type ? K : never]: T[K];\n};\n\nexport type UnionToIntersection<U> = (U extends unknown ? (k: U) => void : never) extends (k: infer I) => void\n  ? I\n  : never;\n\nexport type OmittedValues<T, K extends keyof T> = Omit<T, K>[keyof Omit<T, K>];\n\nexport type PartialDeep<T> = T extends object\n  ? T extends Function\n    ? T\n    : {\n        [P in keyof T]?: PartialDeep<T[P]>;\n      }\n  : T;\n\nexport type PartialNullable<T> = {\n  [P in keyof T]?: T[P] | null;\n};\n\nexport type Optional<T> = T | undefined;\n\nexport type ContextValue<T extends React.Context<any>> = T extends React.Context<infer V> ? V : never;\n\nexport type OnBeforeHandler<T> = (params: T) => T | Promise<T>;\n\nexport interface UserStruct {\n  userId: string;\n}\n\nexport type SendbirdChatSDK = SendbirdChat & ModuleNamespaces<[GroupChannelModule, OpenChannelModule]>;\nexport type SendbirdMessage = BaseMessage | FileMessage | UserMessage | AdminMessage | SendableMessage;\nexport type SendbirdChannel = BaseChannel | GroupChannel | OpenChannel;\nexport type SendbirdUserMessage = UserMessage;\nexport type SendbirdFileMessage = FileMessage;\nexport type SendbirdAdminMessage = AdminMessage;\nexport type SendbirdBaseMessage = BaseMessage;\nexport type SendbirdSendableMessage = SendableMessage;\nexport type SendbirdFileMessageCreateParams = FileMessageCreateParams;\nexport type SendbirdFileMessageUpdateParams = FileMessageUpdateParams;\nexport type SendbirdUserMessageCreateParams = UserMessageCreateParams;\nexport type SendbirdUserMessageUpdateParams = UserMessageUpdateParams;\n\nexport type SendbirdGroupChannelCreateParams = GroupChannelCreateParams;\nexport type SendbirdGroupChannelUpdateParams = GroupChannelUpdateParams;\nexport type SendbirdOpenChannelCreateParams = OpenChannelCreateParams;\nexport type SendbirdOpenChannelUpdateParams = OpenChannelUpdateParams;\n\nexport type SendbirdUserUpdateParams = UserUpdateParams;\nexport type SendbirdUser = User;\nexport type SendbirdRestrictedUser = RestrictedUser;\nexport type SendbirdMember = Member;\nexport type SendbirdParticipant = Participant;\n\nexport type SendbirdGroupChannel = GroupChannel;\nexport type SendbirdBaseChannel = BaseChannel;\nexport type SendbirdOpenChannel = OpenChannel;\n\nexport type SendbirdReaction = Reaction;\nexport type SendbirdEmoji = Emoji;\nexport type SendbirdEmojiCategory = EmojiCategory;\nexport type SendbirdEmojiContainer = EmojiContainer;\n\nexport type SendbirdGroupChannelCollection = GroupChannelCollection;\nexport type SendbirdGroupChannelListQuery = GroupChannelListQuery;\nexport type SendbirdOpenChannelListQuery = OpenChannelListQuery;\nexport type SendbirdMessageCollection = MessageCollection;\nexport type SendbirdPreviousMessageListQuery = PreviousMessageListQuery;\nexport type SendbirdMessageSearchQuery = MessageSearchQuery;\n\nexport type SendbirdError = SBError;\n\nexport interface SendbirdDataPayload {\n  app_id: string;\n  audience_type: string;\n  category: string;\n  channel: {\n    channel_unread_message_count: number;\n    channel_url: string;\n    custom_type: string;\n    name: string;\n  };\n  channel_type: string;\n  created_at: number;\n  custom_type: string;\n  files: NotificationFiles[];\n  mentioned_users: NotificationMentionedUsers[];\n  message: string;\n  message_id: number;\n  push_sound: string;\n  push_title: null;\n  recipient: {\n    id: string;\n    name: string;\n    push_template: string;\n  };\n  sender?: {\n    id: string;\n    name: string;\n    profile_url: string;\n    require_auth_for_profile_image: boolean;\n  };\n  sqs_ts: number;\n  translations: NotificationTranslations;\n  type: 'ADMM' | 'MESG' | 'FILE' | string;\n  unread_message_count: number;\n}\nexport interface NotificationFiles {\n  type: string;\n  url: string;\n  name: string;\n  size: number;\n  require_auth: boolean;\n}\n\nexport interface NotificationTranslations {}\nexport interface NotificationMentionedUsers {}\n"],"mappings":""}