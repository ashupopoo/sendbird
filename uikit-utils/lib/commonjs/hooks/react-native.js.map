{"version":3,"names":["_react","require","_reactNative","_reactNativeSafeAreaContext","edgePaddingMap","left","right","top","bottom","useSafeAreaPadding","edges","safeAreaInsets","useSafeAreaInsets","reduce","map","edge","paddingKey","exports","useAppState","type","listener","callbackRef","useRef","current","useEffect","eventListener","state","subscriber","AppState","addEventListener","remove","removeEventListener"],"sources":["react-native.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { AppState, AppStateEvent, AppStateStatus } from 'react-native';\nimport { EdgeInsets, useSafeAreaInsets } from 'react-native-safe-area-context';\n\ntype EdgePaddingMap = {\n  left: 'paddingLeft';\n  right: 'paddingRight';\n  top: 'paddingTop';\n  bottom: 'paddingBottom';\n};\nconst edgePaddingMap: EdgePaddingMap = {\n  left: 'paddingLeft',\n  right: 'paddingRight',\n  top: 'paddingTop',\n  bottom: 'paddingBottom',\n};\n\nexport const useSafeAreaPadding = <\n  T extends keyof EdgeInsets,\n  Result extends { [key in EdgePaddingMap[T]]: EdgeInsets[T] },\n>(\n  edges: T[],\n): Result => {\n  const safeAreaInsets = useSafeAreaInsets();\n  return edges.reduce((map, edge) => {\n    const paddingKey = edgePaddingMap[edge];\n    map[paddingKey] = safeAreaInsets[edge];\n    return map;\n  }, {} as { [key in EdgePaddingMap[T]]: EdgeInsets[T] }) as Result;\n};\n\ntype AppStateListener = (status: AppStateStatus) => void;\n\nexport const useAppState = (type: AppStateEvent, listener: AppStateListener) => {\n  const callbackRef = useRef<AppStateListener>(listener);\n  callbackRef.current = listener;\n\n  useEffect(() => {\n    const eventListener = (state: AppStateStatus) => callbackRef.current(state);\n    const subscriber = AppState.addEventListener(type, eventListener);\n\n    return () => {\n      // @ts-ignore\n      if (subscriber?.remove) {\n        subscriber.remove();\n      }\n      // @ts-ignore\n      else if (AppState.removeEventListener) {\n        // @ts-ignore\n        AppState.removeEventListener(type, eventListener);\n      }\n    };\n  }, []);\n};\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,2BAAA,GAAAF,OAAA;AAQA,MAAMG,cAA8B,GAAG;EACrCC,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE,cAAc;EACrBC,GAAG,EAAE,YAAY;EACjBC,MAAM,EAAE;AACV,CAAC;AAEM,MAAMC,kBAAkB,GAI7BC,KAAU,IACC;EACX,MAAMC,cAAc,GAAG,IAAAC,6CAAiB,GAAE;EAC1C,OAAOF,KAAK,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;IACjC,MAAMC,UAAU,GAAGZ,cAAc,CAACW,IAAI,CAAC;IACvCD,GAAG,CAACE,UAAU,CAAC,GAAGL,cAAc,CAACI,IAAI,CAAC;IACtC,OAAOD,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAkD;AACzD,CAAC;AAACG,OAAA,CAAAR,kBAAA,GAAAA,kBAAA;AAIK,MAAMS,WAAW,GAAGA,CAACC,IAAmB,EAAEC,QAA0B,KAAK;EAC9E,MAAMC,WAAW,GAAG,IAAAC,aAAM,EAAmBF,QAAQ,CAAC;EACtDC,WAAW,CAACE,OAAO,GAAGH,QAAQ;EAE9B,IAAAI,gBAAS,EAAC,MAAM;IACd,MAAMC,aAAa,GAAIC,KAAqB,IAAKL,WAAW,CAACE,OAAO,CAACG,KAAK,CAAC;IAC3E,MAAMC,UAAU,GAAGC,qBAAQ,CAACC,gBAAgB,CAACV,IAAI,EAAEM,aAAa,CAAC;IAEjE,OAAO,MAAM;MACX;MACA,IAAIE,UAAU,aAAVA,UAAU,eAAVA,UAAU,CAAEG,MAAM,EAAE;QACtBH,UAAU,CAACG,MAAM,EAAE;MACrB;MACA;MAAA,KACK,IAAIF,qBAAQ,CAACG,mBAAmB,EAAE;QACrC;QACAH,qBAAQ,CAACG,mBAAmB,CAACZ,IAAI,EAAEM,aAAa,CAAC;MACnD;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;AACR,CAAC;AAACR,OAAA,CAAAC,WAAA,GAAAA,WAAA"}