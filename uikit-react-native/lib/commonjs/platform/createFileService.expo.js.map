{"version":3,"names":["_uikitUtils","require","_SBUError","_interopRequireDefault","_expoPermissionGranted","_normalizeFile","obj","__esModule","default","createExpoFileService","_ref","imagePickerModule","documentPickerModule","mediaLibraryModule","fsModule","ExpoFileServiceInterface","hasCameraPermission","res","getCameraPermissionsAsync","expoPermissionGranted","requestCameraPermission","requestCameraPermissionsAsync","hasMediaLibraryPermission","type","perms","getPermissionsAsync","requestMediaLibraryPermission","requestPermissionsAsync","openCamera","options","hasPermission","granted","_options$onOpenFailur","onOpenFailure","call","SBUError","PERMISSIONS_DENIED","response","launchCameraAsync","mediaTypes","mediaType","MediaTypeOptions","Images","Videos","All","cancelled","uri","size","getInfoAsync","normalizeFile","openMediaLibrary","_options$onOpenFailur2","launchImageLibraryAsync","openDocument","getDocumentAsync","mimeType","name","e","_options$onOpenFailur3","UNKNOWN","save","Error","basePath","documentDirectory","cacheDirectory","downloadPath","fileName","downloadAsync","fileUrl","getFileType","fileType","match","saveToLibraryAsync","_default","exports"],"sources":["createFileService.expo.ts"],"sourcesContent":["import type * as ExpoDocumentPicker from 'expo-document-picker';\nimport type * as ExpoFs from 'expo-file-system';\nimport type * as ExpoImagePicker from 'expo-image-picker';\nimport type * as ExpoMediaLibrary from 'expo-media-library';\n\nimport { getFileType } from '@sendbird/uikit-utils';\n\nimport SBUError from '../libs/SBUError';\nimport type { ExpoMediaLibraryPermissionResponse, ExpoPermissionResponse } from '../utils/expoPermissionGranted';\nimport expoPermissionGranted from '../utils/expoPermissionGranted';\nimport normalizeFile from '../utils/normalizeFile';\nimport type {\n  FilePickerResponse,\n  FileServiceInterface,\n  OpenCameraOptions,\n  OpenDocumentOptions,\n  OpenMediaLibraryOptions,\n  SaveOptions,\n} from './types';\n\nconst createExpoFileService = ({\n  imagePickerModule,\n  documentPickerModule,\n  mediaLibraryModule,\n  fsModule,\n}: {\n  imagePickerModule: typeof ExpoImagePicker;\n  documentPickerModule: typeof ExpoDocumentPicker;\n  mediaLibraryModule: typeof ExpoMediaLibrary;\n  fsModule: typeof ExpoFs;\n}): FileServiceInterface => {\n  class ExpoFileServiceInterface implements FileServiceInterface {\n    async hasCameraPermission(): Promise<boolean> {\n      const res = (await imagePickerModule.getCameraPermissionsAsync()) as ExpoPermissionResponse;\n      return expoPermissionGranted([res]);\n    }\n    async requestCameraPermission(): Promise<boolean> {\n      const res = (await imagePickerModule.requestCameraPermissionsAsync()) as ExpoPermissionResponse;\n      return expoPermissionGranted([res]);\n    }\n    async hasMediaLibraryPermission(type: 'write' | 'read'): Promise<boolean> {\n      const perms = (await mediaLibraryModule.getPermissionsAsync(\n        type === 'write',\n      )) as ExpoMediaLibraryPermissionResponse;\n      return expoPermissionGranted([perms]);\n    }\n    async requestMediaLibraryPermission(type: 'write' | 'read'): Promise<boolean> {\n      const perms = (await mediaLibraryModule.requestPermissionsAsync(\n        type === 'write',\n      )) as ExpoMediaLibraryPermissionResponse;\n      return expoPermissionGranted([perms]);\n    }\n\n    async openCamera(options?: OpenCameraOptions): Promise<FilePickerResponse> {\n      const hasPermission = await this.hasCameraPermission();\n      if (!hasPermission) {\n        const granted = await this.requestCameraPermission();\n        if (!granted) {\n          options?.onOpenFailure?.(SBUError.PERMISSIONS_DENIED);\n          return null;\n        }\n      }\n\n      const response = await imagePickerModule.launchCameraAsync({\n        mediaTypes: (() => {\n          switch (options?.mediaType) {\n            case 'photo':\n              return imagePickerModule.MediaTypeOptions.Images;\n            case 'video':\n              return imagePickerModule.MediaTypeOptions.Videos;\n            case 'all':\n              return imagePickerModule.MediaTypeOptions.All;\n            default:\n              return imagePickerModule.MediaTypeOptions.Images;\n          }\n        })(),\n      });\n\n      if (response.cancelled) return null;\n\n      const { uri } = response;\n      const { size } = await fsModule.getInfoAsync(response.uri);\n\n      return normalizeFile({ uri, size });\n    }\n    async openMediaLibrary(options: OpenMediaLibraryOptions) {\n      const hasPermission = await this.hasMediaLibraryPermission('read');\n      if (!hasPermission) {\n        const granted = await this.requestMediaLibraryPermission('read');\n        if (!granted) {\n          options?.onOpenFailure?.(SBUError.PERMISSIONS_DENIED);\n          return null;\n        }\n      }\n\n      const response = await imagePickerModule.launchImageLibraryAsync({\n        mediaTypes: (() => {\n          switch (options?.mediaType) {\n            case 'photo':\n              return imagePickerModule.MediaTypeOptions.Images;\n            case 'video':\n              return imagePickerModule.MediaTypeOptions.Videos;\n            case 'all':\n              return imagePickerModule.MediaTypeOptions.All;\n            default:\n              return imagePickerModule.MediaTypeOptions.Images;\n          }\n        })(),\n      });\n      if (response.cancelled) return null;\n      const { uri } = response;\n      const { size } = await fsModule.getInfoAsync(uri);\n      return [await normalizeFile({ uri, size })];\n    }\n\n    async openDocument(options?: OpenDocumentOptions): Promise<FilePickerResponse> {\n      try {\n        const response = await documentPickerModule.getDocumentAsync({ type: '*/*' });\n        if (response.type === 'cancel') return null;\n        const { mimeType, uri, size, name } = response;\n        return normalizeFile({ uri, size, name, type: mimeType });\n      } catch (e) {\n        options?.onOpenFailure?.(SBUError.UNKNOWN, e);\n        return null;\n      }\n    }\n\n    async save(options: SaveOptions): Promise<string> {\n      const hasPermission = await this.hasMediaLibraryPermission('write');\n      if (!hasPermission) {\n        const granted = await this.requestMediaLibraryPermission('write');\n        if (!granted) throw new Error('Permission not granted');\n      }\n\n      const basePath = fsModule.documentDirectory || fsModule.cacheDirectory;\n      if (!basePath) throw new Error('Cannot determine directory');\n\n      const downloadPath = `${basePath}/${options.fileName}`;\n\n      const response = await fsModule.downloadAsync(options.fileUrl, downloadPath);\n      if (getFileType(options.fileType || '').match(/video|image/)) {\n        await mediaLibraryModule.saveToLibraryAsync(response.uri);\n      }\n      return response.uri;\n    }\n  }\n\n  return new ExpoFileServiceInterface();\n};\n\nexport default createExpoFileService;\n"],"mappings":";;;;;;AAKA,IAAAA,WAAA,GAAAC,OAAA;AAEA,IAAAC,SAAA,GAAAC,sBAAA,CAAAF,OAAA;AAEA,IAAAG,sBAAA,GAAAD,sBAAA,CAAAF,OAAA;AACA,IAAAI,cAAA,GAAAF,sBAAA,CAAAF,OAAA;AAAmD,SAAAE,uBAAAG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAUnD,MAAMG,qBAAqB,GAAGC,IAAA,IAUF;EAAA,IAVG;IAC7BC,iBAAiB;IACjBC,oBAAoB;IACpBC,kBAAkB;IAClBC;EAMF,CAAC,GAAAJ,IAAA;EACC,MAAMK,wBAAwB,CAAiC;IAC7D,MAAMC,mBAAmBA,CAAA,EAAqB;MAC5C,MAAMC,GAAG,GAAI,MAAMN,iBAAiB,CAACO,yBAAyB,EAA6B;MAC3F,OAAO,IAAAC,8BAAqB,EAAC,CAACF,GAAG,CAAC,CAAC;IACrC;IACA,MAAMG,uBAAuBA,CAAA,EAAqB;MAChD,MAAMH,GAAG,GAAI,MAAMN,iBAAiB,CAACU,6BAA6B,EAA6B;MAC/F,OAAO,IAAAF,8BAAqB,EAAC,CAACF,GAAG,CAAC,CAAC;IACrC;IACA,MAAMK,yBAAyBA,CAACC,IAAsB,EAAoB;MACxE,MAAMC,KAAK,GAAI,MAAMX,kBAAkB,CAACY,mBAAmB,CACzDF,IAAI,KAAK,OAAO,CACsB;MACxC,OAAO,IAAAJ,8BAAqB,EAAC,CAACK,KAAK,CAAC,CAAC;IACvC;IACA,MAAME,6BAA6BA,CAACH,IAAsB,EAAoB;MAC5E,MAAMC,KAAK,GAAI,MAAMX,kBAAkB,CAACc,uBAAuB,CAC7DJ,IAAI,KAAK,OAAO,CACsB;MACxC,OAAO,IAAAJ,8BAAqB,EAAC,CAACK,KAAK,CAAC,CAAC;IACvC;IAEA,MAAMI,UAAUA,CAACC,OAA2B,EAA+B;MACzE,MAAMC,aAAa,GAAG,MAAM,IAAI,CAACd,mBAAmB,EAAE;MACtD,IAAI,CAACc,aAAa,EAAE;QAClB,MAAMC,OAAO,GAAG,MAAM,IAAI,CAACX,uBAAuB,EAAE;QACpD,IAAI,CAACW,OAAO,EAAE;UAAA,IAAAC,qBAAA;UACZH,OAAO,aAAPA,OAAO,wBAAAG,qBAAA,GAAPH,OAAO,CAAEI,aAAa,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAAE,IAAA,CAAAL,OAAO,EAAkBM,iBAAQ,CAACC,kBAAkB,CAAC;UACrD,OAAO,IAAI;QACb;MACF;MAEA,MAAMC,QAAQ,GAAG,MAAM1B,iBAAiB,CAAC2B,iBAAiB,CAAC;QACzDC,UAAU,EAAE,CAAC,MAAM;UACjB,QAAQV,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEW,SAAS;YACxB,KAAK,OAAO;cACV,OAAO7B,iBAAiB,CAAC8B,gBAAgB,CAACC,MAAM;YAClD,KAAK,OAAO;cACV,OAAO/B,iBAAiB,CAAC8B,gBAAgB,CAACE,MAAM;YAClD,KAAK,KAAK;cACR,OAAOhC,iBAAiB,CAAC8B,gBAAgB,CAACG,GAAG;YAC/C;cACE,OAAOjC,iBAAiB,CAAC8B,gBAAgB,CAACC,MAAM;UAAC;QAEvD,CAAC;MACH,CAAC,CAAC;MAEF,IAAIL,QAAQ,CAACQ,SAAS,EAAE,OAAO,IAAI;MAEnC,MAAM;QAAEC;MAAI,CAAC,GAAGT,QAAQ;MACxB,MAAM;QAAEU;MAAK,CAAC,GAAG,MAAMjC,QAAQ,CAACkC,YAAY,CAACX,QAAQ,CAACS,GAAG,CAAC;MAE1D,OAAO,IAAAG,sBAAa,EAAC;QAAEH,GAAG;QAAEC;MAAK,CAAC,CAAC;IACrC;IACA,MAAMG,gBAAgBA,CAACrB,OAAgC,EAAE;MACvD,MAAMC,aAAa,GAAG,MAAM,IAAI,CAACR,yBAAyB,CAAC,MAAM,CAAC;MAClE,IAAI,CAACQ,aAAa,EAAE;QAClB,MAAMC,OAAO,GAAG,MAAM,IAAI,CAACL,6BAA6B,CAAC,MAAM,CAAC;QAChE,IAAI,CAACK,OAAO,EAAE;UAAA,IAAAoB,sBAAA;UACZtB,OAAO,aAAPA,OAAO,wBAAAsB,sBAAA,GAAPtB,OAAO,CAAEI,aAAa,cAAAkB,sBAAA,uBAAtBA,sBAAA,CAAAjB,IAAA,CAAAL,OAAO,EAAkBM,iBAAQ,CAACC,kBAAkB,CAAC;UACrD,OAAO,IAAI;QACb;MACF;MAEA,MAAMC,QAAQ,GAAG,MAAM1B,iBAAiB,CAACyC,uBAAuB,CAAC;QAC/Db,UAAU,EAAE,CAAC,MAAM;UACjB,QAAQV,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEW,SAAS;YACxB,KAAK,OAAO;cACV,OAAO7B,iBAAiB,CAAC8B,gBAAgB,CAACC,MAAM;YAClD,KAAK,OAAO;cACV,OAAO/B,iBAAiB,CAAC8B,gBAAgB,CAACE,MAAM;YAClD,KAAK,KAAK;cACR,OAAOhC,iBAAiB,CAAC8B,gBAAgB,CAACG,GAAG;YAC/C;cACE,OAAOjC,iBAAiB,CAAC8B,gBAAgB,CAACC,MAAM;UAAC;QAEvD,CAAC;MACH,CAAC,CAAC;MACF,IAAIL,QAAQ,CAACQ,SAAS,EAAE,OAAO,IAAI;MACnC,MAAM;QAAEC;MAAI,CAAC,GAAGT,QAAQ;MACxB,MAAM;QAAEU;MAAK,CAAC,GAAG,MAAMjC,QAAQ,CAACkC,YAAY,CAACF,GAAG,CAAC;MACjD,OAAO,CAAC,MAAM,IAAAG,sBAAa,EAAC;QAAEH,GAAG;QAAEC;MAAK,CAAC,CAAC,CAAC;IAC7C;IAEA,MAAMM,YAAYA,CAACxB,OAA6B,EAA+B;MAC7E,IAAI;QACF,MAAMQ,QAAQ,GAAG,MAAMzB,oBAAoB,CAAC0C,gBAAgB,CAAC;UAAE/B,IAAI,EAAE;QAAM,CAAC,CAAC;QAC7E,IAAIc,QAAQ,CAACd,IAAI,KAAK,QAAQ,EAAE,OAAO,IAAI;QAC3C,MAAM;UAAEgC,QAAQ;UAAET,GAAG;UAAEC,IAAI;UAAES;QAAK,CAAC,GAAGnB,QAAQ;QAC9C,OAAO,IAAAY,sBAAa,EAAC;UAAEH,GAAG;UAAEC,IAAI;UAAES,IAAI;UAAEjC,IAAI,EAAEgC;QAAS,CAAC,CAAC;MAC3D,CAAC,CAAC,OAAOE,CAAC,EAAE;QAAA,IAAAC,sBAAA;QACV7B,OAAO,aAAPA,OAAO,wBAAA6B,sBAAA,GAAP7B,OAAO,CAAEI,aAAa,cAAAyB,sBAAA,uBAAtBA,sBAAA,CAAAxB,IAAA,CAAAL,OAAO,EAAkBM,iBAAQ,CAACwB,OAAO,EAAEF,CAAC,CAAC;QAC7C,OAAO,IAAI;MACb;IACF;IAEA,MAAMG,IAAIA,CAAC/B,OAAoB,EAAmB;MAChD,MAAMC,aAAa,GAAG,MAAM,IAAI,CAACR,yBAAyB,CAAC,OAAO,CAAC;MACnE,IAAI,CAACQ,aAAa,EAAE;QAClB,MAAMC,OAAO,GAAG,MAAM,IAAI,CAACL,6BAA6B,CAAC,OAAO,CAAC;QACjE,IAAI,CAACK,OAAO,EAAE,MAAM,IAAI8B,KAAK,CAAC,wBAAwB,CAAC;MACzD;MAEA,MAAMC,QAAQ,GAAGhD,QAAQ,CAACiD,iBAAiB,IAAIjD,QAAQ,CAACkD,cAAc;MACtE,IAAI,CAACF,QAAQ,EAAE,MAAM,IAAID,KAAK,CAAC,4BAA4B,CAAC;MAE5D,MAAMI,YAAY,GAAI,GAAEH,QAAS,IAAGjC,OAAO,CAACqC,QAAS,EAAC;MAEtD,MAAM7B,QAAQ,GAAG,MAAMvB,QAAQ,CAACqD,aAAa,CAACtC,OAAO,CAACuC,OAAO,EAAEH,YAAY,CAAC;MAC5E,IAAI,IAAAI,uBAAW,EAACxC,OAAO,CAACyC,QAAQ,IAAI,EAAE,CAAC,CAACC,KAAK,CAAC,aAAa,CAAC,EAAE;QAC5D,MAAM1D,kBAAkB,CAAC2D,kBAAkB,CAACnC,QAAQ,CAACS,GAAG,CAAC;MAC3D;MACA,OAAOT,QAAQ,CAACS,GAAG;IACrB;EACF;EAEA,OAAO,IAAI/B,wBAAwB,EAAE;AACvC,CAAC;AAAC,IAAA0D,QAAA,GAEahE,qBAAqB;AAAAiE,OAAA,CAAAlE,OAAA,GAAAiE,QAAA"}