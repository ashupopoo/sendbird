{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_chat","_uikitReactNativeFoundation","_uikitUtils","_useContext","_moduleContext","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","WARN_onPressMenuNotification","WARN_onPressMenuSearchInChannel","GroupChannelSettingsMenu","_ref","onPressMenuModeration","onPressMenuMembers","onPressMenuSearchInChannel","onPressMenuLeaveChannel","onPressMenuNotification","menuItemsCreator","menu","sdk","features","useSendbirdChat","channel","useContext","GroupChannelSettingsContexts","Fragment","STRINGS","useLocalization","colors","useUIKitTheme","__DEV__","userMentionEnabled","Logger","warn","messageSearchEnabled","toggleNotification","myPushTriggerOption","setMyPushTriggerOption","PushTriggerOption","DEFAULT","OFF","onPressNotificationMenu","actionLabelNotificationMenu","actionItemNotificationMenu","useIIFE","getNotificationsLabel","ALL","GROUP_CHANNEL_SETTINGS","MENU_NOTIFICATION_LABEL_ON","MENU_NOTIFICATION_LABEL_OFF","MENTION_ONLY","MENU_NOTIFICATION_LABEL_MENTION_ONLY","conditionChaining","createElement","Icon","icon","color","onBackground01","Switch","value","onChangeValue","menuItems","visible","myRole","name","MENU_MODERATION","onPress","actionItem","MENU_NOTIFICATION","actionLabel","MENU_MEMBERS","String","memberCount","push","MENU_SEARCH","iconColor","error","MENU_LEAVE_CHANNEL","leave","then","clearCachedMessages","url","catch","View","map","MenuBar","disabled","iconBackgroundColor","_default","exports"],"sources":["GroupChannelSettingsMenu.tsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { View } from 'react-native';\n\nimport { PushTriggerOption } from '@sendbird/chat';\nimport type { MenuBarProps } from '@sendbird/uikit-react-native-foundation';\nimport { Icon, MenuBar, Switch, useUIKitTheme } from '@sendbird/uikit-react-native-foundation';\nimport { Logger, conditionChaining, useIIFE } from '@sendbird/uikit-utils';\n\nimport { useLocalization, useSendbirdChat } from '../../../hooks/useContext';\nimport { GroupChannelSettingsContexts } from '../module/moduleContext';\nimport type { GroupChannelSettingsProps } from '../types';\n\nlet WARN_onPressMenuNotification = false;\nlet WARN_onPressMenuSearchInChannel = false;\n\nconst GroupChannelSettingsMenu = ({\n  onPressMenuModeration,\n  onPressMenuMembers,\n  onPressMenuSearchInChannel,\n  onPressMenuLeaveChannel,\n  onPressMenuNotification,\n  menuItemsCreator = (menu) => menu,\n}: GroupChannelSettingsProps['Menu']) => {\n  const { sdk, features } = useSendbirdChat();\n  const { channel } = useContext(GroupChannelSettingsContexts.Fragment);\n  const { STRINGS } = useLocalization();\n  const { colors } = useUIKitTheme();\n\n  if (__DEV__ && !WARN_onPressMenuNotification && !onPressMenuNotification && features.userMentionEnabled) {\n    Logger.warn('If you are using mention, make sure to pass the `onPressMenuNotification` prop');\n    WARN_onPressMenuNotification = true;\n  }\n\n  if (__DEV__ && !WARN_onPressMenuSearchInChannel && !onPressMenuSearchInChannel && features.messageSearchEnabled) {\n    Logger.warn('If you are using message search, make sure to pass the `onPressMenuSearchInChannel` prop');\n    WARN_onPressMenuSearchInChannel = true;\n  }\n\n  const toggleNotification = async () => {\n    if (channel.myPushTriggerOption === 'off') {\n      await channel.setMyPushTriggerOption(PushTriggerOption.DEFAULT);\n    } else {\n      await channel.setMyPushTriggerOption(PushTriggerOption.OFF);\n    }\n  };\n\n  const { onPressNotificationMenu, actionLabelNotificationMenu, actionItemNotificationMenu } = useIIFE(() => {\n    const getNotificationsLabel = () => {\n      switch (channel.myPushTriggerOption) {\n        case PushTriggerOption.ALL:\n        case PushTriggerOption.DEFAULT:\n          return STRINGS.GROUP_CHANNEL_SETTINGS.MENU_NOTIFICATION_LABEL_ON;\n        case PushTriggerOption.OFF:\n          return STRINGS.GROUP_CHANNEL_SETTINGS.MENU_NOTIFICATION_LABEL_OFF;\n        case PushTriggerOption.MENTION_ONLY:\n          return STRINGS.GROUP_CHANNEL_SETTINGS.MENU_NOTIFICATION_LABEL_MENTION_ONLY;\n      }\n    };\n\n    return {\n      actionLabelNotificationMenu: getNotificationsLabel(),\n      actionItemNotificationMenu: conditionChaining(\n        [features.userMentionEnabled],\n        [\n          <Icon icon={'chevron-right'} color={colors.onBackground01} />,\n          <Switch value={channel.myPushTriggerOption !== 'off'} onChangeValue={toggleNotification} />,\n        ],\n      ),\n      onPressNotificationMenu: () => {\n        if (features.userMentionEnabled) onPressMenuNotification?.();\n        else toggleNotification();\n      },\n    };\n  });\n\n  const menuItems: MenuBarProps[] = menuItemsCreator([\n    {\n      icon: 'moderation',\n      visible: channel.myRole === 'operator',\n      name: STRINGS.GROUP_CHANNEL_SETTINGS.MENU_MODERATION,\n      onPress: () => onPressMenuModeration(),\n      actionItem: <Icon icon={'chevron-right'} color={colors.onBackground01} />,\n    },\n    {\n      icon: 'notifications',\n      name: STRINGS.GROUP_CHANNEL_SETTINGS.MENU_NOTIFICATION,\n      onPress: onPressNotificationMenu,\n      actionLabel: actionLabelNotificationMenu,\n      actionItem: actionItemNotificationMenu,\n    },\n    {\n      icon: 'members',\n      name: STRINGS.GROUP_CHANNEL_SETTINGS.MENU_MEMBERS,\n      onPress: () => onPressMenuMembers(),\n      actionLabel: String(channel.memberCount),\n      actionItem: <Icon icon={'chevron-right'} color={colors.onBackground01} />,\n    },\n  ]);\n\n  if (features.messageSearchEnabled) {\n    menuItems.push({\n      icon: 'search',\n      name: STRINGS.GROUP_CHANNEL_SETTINGS.MENU_SEARCH,\n      onPress: () => onPressMenuSearchInChannel?.(),\n    });\n  }\n\n  menuItems.push({\n    icon: 'leave',\n    iconColor: colors.error,\n    name: STRINGS.GROUP_CHANNEL_SETTINGS.MENU_LEAVE_CHANNEL,\n    onPress: () => {\n      channel.leave().then(() => {\n        onPressMenuLeaveChannel();\n        sdk.clearCachedMessages([channel.url]).catch();\n      });\n    },\n  });\n\n  return (\n    <View>\n      {menuItems.map((menu) => {\n        return (\n          <MenuBar\n            key={menu.name}\n            onPress={menu.onPress}\n            name={menu.name}\n            disabled={menu.disabled}\n            visible={menu.visible}\n            icon={menu.icon}\n            iconColor={menu.iconColor}\n            iconBackgroundColor={menu.iconBackgroundColor}\n            actionLabel={menu.actionLabel}\n            actionItem={menu.actionItem}\n          />\n        );\n      })}\n    </View>\n  );\n};\n\nexport default GroupChannelSettingsMenu;\n"],"mappings":"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"}