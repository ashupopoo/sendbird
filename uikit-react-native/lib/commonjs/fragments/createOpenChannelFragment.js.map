{"version":3,"names":["_react","_interopRequireWildcard","require","_chat","_uikitChatHooks","_uikitReactNativeFoundation","_uikitUtils","_OpenChannelMessageRenderer","_interopRequireDefault","_ScrollToBottomButton","_StatusComposition","_constants","_openChannel","_useContext","_pubsub","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_extends","assign","bind","target","i","arguments","length","source","apply","createOpenChannelFragment","initModule","OpenChannelModule","createOpenChannelModule","_ref","channel","onChannelDeleted","NOOP","onPressHeaderLeft","onPressHeaderRightWithSettings","onPressHeaderRightWithParticipants","onBeforeSendUserMessage","PASS","onBeforeSendFileMessage","onBeforeUpdateUserMessage","onBeforeUpdateFileMessage","onPressMediaMessage","renderMessage","renderNewMessagesButton","renderScrollToBottomButton","props","createElement","enableMessageGrouping","keyboardAvoidOffset","flatListProps","queryCreator","sortComparator","messageComparator","sdk","currentUser","useSendbirdChat","STRINGS","useLocalization","show","showToast","useToast","showUserProfile","useUserProfile","openChannelPubSub","useState","pubsub","messages","newMessages","next","prev","hasNext","sendFileMessage","sendUserMessage","updateFileMessage","updateUserMessage","resendMessage","deleteMessage","loading","useOpenChannelMessages","userId","onError","error","SendbirdError","code","SBErrorCode","RESOURCE_NOT_FOUND","CHANNEL_NOT_FOUND","BANNED_USER_SEND_MESSAGE_NOT_ALLOWED","TOAST","GET_CHANNEL_ERROR","UNKNOWN_ERROR","onMessagesReceived","publish","type","data","isOperator","UNKNOWN_USER_ID","_renderMessage","useFreshCallback","onPressAvatar","memoizedFlatListProps","useMemo","ListEmptyComponent","StatusEmpty","contentContainerStyle","flexGrow","onPending","message","onSent","onPressSendUserMessage","params","processedParams","onPressSendFileMessage","onPressUpdateUserMessage","messageId","onPressUpdateFileMessage","Provider","Header","rightIconName","onPressHeaderRight","LoadingComponent","StatusLoading","MessageList","currentUserId","onTopReached","onBottomReached","scrolledAwayFromBottom","onScrolledAwayFromBottom","onResendFailedMessage","onDeleteMessage","Input","shouldRenderInput","_default","exports"],"sources":["createOpenChannelFragment.tsx"],"sourcesContent":["import React, { useMemo, useState } from 'react';\n\nimport { SendbirdError } from '@sendbird/chat';\nimport { useOpenChannelMessages } from '@sendbird/uikit-chat-hooks';\nimport { useToast } from '@sendbird/uikit-react-native-foundation';\nimport {\n  NOOP,\n  PASS,\n  SBErrorCode,\n  SendbirdFileMessage,\n  SendbirdUserMessage,\n  messageComparator,\n  useFreshCallback,\n} from '@sendbird/uikit-utils';\n\nimport OpenChannelMessageRenderer from '../components/OpenChannelMessageRenderer';\nimport ScrollToBottomButton from '../components/ScrollToBottomButton';\nimport StatusComposition from '../components/StatusComposition';\nimport { UNKNOWN_USER_ID } from '../constants';\nimport { createOpenChannelModule } from '../domain/openChannel';\nimport type {\n  OpenChannelFragment,\n  OpenChannelModule,\n  OpenChannelProps,\n  OpenChannelPubSubContextPayload,\n} from '../domain/openChannel/types';\nimport { useLocalization, useSendbirdChat, useUserProfile } from '../hooks/useContext';\nimport pubsub from '../utils/pubsub';\n\nconst createOpenChannelFragment = (initModule?: Partial<OpenChannelModule>): OpenChannelFragment => {\n  const OpenChannelModule = createOpenChannelModule(initModule);\n\n  return ({\n    channel,\n    onChannelDeleted = NOOP,\n    onPressHeaderLeft = NOOP,\n    onPressHeaderRightWithSettings = NOOP,\n    onPressHeaderRightWithParticipants = NOOP,\n\n    onBeforeSendUserMessage = PASS,\n    onBeforeSendFileMessage = PASS,\n    onBeforeUpdateUserMessage = PASS,\n    onBeforeUpdateFileMessage = PASS,\n    onPressMediaMessage = NOOP,\n\n    renderMessage,\n    renderNewMessagesButton = () => null,\n    renderScrollToBottomButton = (props) => <ScrollToBottomButton {...props} />,\n\n    enableMessageGrouping = true,\n    keyboardAvoidOffset,\n    flatListProps,\n    queryCreator,\n    sortComparator = messageComparator,\n  }) => {\n    const { sdk, currentUser } = useSendbirdChat();\n\n    const { STRINGS } = useLocalization();\n    const { show: showToast } = useToast();\n    const { show: showUserProfile } = useUserProfile();\n\n    const [openChannelPubSub] = useState(() => pubsub<OpenChannelPubSubContextPayload>());\n\n    const {\n      messages,\n      newMessages,\n      next,\n      prev,\n      hasNext,\n      sendFileMessage,\n      sendUserMessage,\n      updateFileMessage,\n      updateUserMessage,\n      resendMessage,\n      deleteMessage,\n      loading,\n    } = useOpenChannelMessages(sdk, channel, currentUser?.userId, {\n      queryCreator,\n      sortComparator,\n      onChannelDeleted,\n      onError(error) {\n        if (error instanceof SendbirdError) {\n          switch (error.code) {\n            case SBErrorCode.RESOURCE_NOT_FOUND:\n            case SBErrorCode.CHANNEL_NOT_FOUND:\n            case SBErrorCode.BANNED_USER_SEND_MESSAGE_NOT_ALLOWED: {\n              return showToast(STRINGS.TOAST.GET_CHANNEL_ERROR, 'error');\n            }\n          }\n        }\n\n        showToast(STRINGS.TOAST.UNKNOWN_ERROR, 'error');\n      },\n      onMessagesReceived(messages) {\n        openChannelPubSub.publish({ type: 'MESSAGES_RECEIVED', data: { messages } });\n      },\n    });\n\n    const isOperator = channel.isOperator(currentUser?.userId ?? UNKNOWN_USER_ID);\n\n    const _renderMessage: OpenChannelProps['MessageList']['renderMessage'] = useFreshCallback((props) => {\n      if (renderMessage) return renderMessage(props);\n      return <OpenChannelMessageRenderer {...props} onPressAvatar={showUserProfile} />;\n    });\n\n    const memoizedFlatListProps = useMemo(\n      () => ({\n        ListEmptyComponent: <OpenChannelModule.StatusEmpty />,\n        contentContainerStyle: { flexGrow: 1 },\n        ...flatListProps,\n      }),\n      [loading, flatListProps],\n    );\n\n    const onPending = (message: SendbirdFileMessage | SendbirdUserMessage) => {\n      openChannelPubSub.publish({ type: 'MESSAGE_SENT_PENDING', data: { message } });\n    };\n    const onSent = (message: SendbirdFileMessage | SendbirdUserMessage) => {\n      openChannelPubSub.publish({ type: 'MESSAGE_SENT_SUCCESS', data: { message } });\n    };\n\n    const onPressSendUserMessage: OpenChannelProps['Input']['onPressSendUserMessage'] = useFreshCallback(\n      async (params) => {\n        const processedParams = await onBeforeSendUserMessage(params);\n        const message = await sendUserMessage(processedParams, onPending);\n        onSent(message);\n      },\n    );\n    const onPressSendFileMessage: OpenChannelProps['Input']['onPressSendFileMessage'] = useFreshCallback(\n      async (params) => {\n        const processedParams = await onBeforeSendFileMessage(params);\n        const message = await sendFileMessage(processedParams, onPending);\n        onSent(message);\n      },\n    );\n    const onPressUpdateUserMessage: OpenChannelProps['Input']['onPressUpdateUserMessage'] = useFreshCallback(\n      async (message, params) => {\n        const processedParams = await onBeforeUpdateUserMessage(params);\n        await updateUserMessage(message.messageId, processedParams);\n      },\n    );\n    const onPressUpdateFileMessage: OpenChannelProps['Input']['onPressUpdateFileMessage'] = useFreshCallback(\n      async (message, params) => {\n        const processedParams = await onBeforeUpdateFileMessage(params);\n        await updateFileMessage(message.messageId, processedParams);\n      },\n    );\n\n    return (\n      <OpenChannelModule.Provider\n        openChannelPubSub={openChannelPubSub}\n        channel={channel}\n        keyboardAvoidOffset={keyboardAvoidOffset}\n      >\n        <OpenChannelModule.Header\n          onPressHeaderLeft={onPressHeaderLeft}\n          rightIconName={isOperator ? 'info' : 'members'}\n          onPressHeaderRight={isOperator ? onPressHeaderRightWithSettings : onPressHeaderRightWithParticipants}\n        />\n        <StatusComposition loading={loading} LoadingComponent={<OpenChannelModule.StatusLoading />}>\n          <OpenChannelModule.MessageList\n            channel={channel}\n            hasNext={hasNext}\n            enableMessageGrouping={enableMessageGrouping}\n            currentUserId={currentUser?.userId}\n            renderMessage={_renderMessage}\n            messages={messages}\n            newMessages={newMessages}\n            onTopReached={prev}\n            onBottomReached={next}\n            scrolledAwayFromBottom={false}\n            onScrolledAwayFromBottom={NOOP}\n            renderNewMessagesButton={renderNewMessagesButton}\n            renderScrollToBottomButton={renderScrollToBottomButton}\n            onResendFailedMessage={resendMessage}\n            onDeleteMessage={deleteMessage}\n            onPressMediaMessage={onPressMediaMessage}\n            flatListProps={memoizedFlatListProps}\n          />\n          <OpenChannelModule.Input\n            shouldRenderInput\n            onPressSendUserMessage={onPressSendUserMessage}\n            onPressSendFileMessage={onPressSendFileMessage}\n            onPressUpdateUserMessage={onPressUpdateUserMessage}\n            onPressUpdateFileMessage={onPressUpdateFileMessage}\n          />\n        </StatusComposition>\n      </OpenChannelModule.Provider>\n    );\n  };\n};\n\nexport default createOpenChannelFragment;\n"],"mappings":"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"}