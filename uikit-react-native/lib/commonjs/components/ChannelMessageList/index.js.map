{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_reactNativeSafeAreaContext","_uikitReactNativeFoundation","_uikitUtils","_constants","_useContext","_SBUUtils","_ChatFlatList","_ReactionAddons","obj","__esModule","default","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","ChannelMessageList","_ref","ref","searchItem","hasNext","channel","onEditMessage","onDeleteMessage","onResendFailedMessage","onPressMediaMessage","currentUserId","renderNewMessagesButton","renderScrollToBottomButton","renderMessage","messages","newMessages","enableMessageGrouping","onScrolledAwayFromBottom","scrolledAwayFromBottom","onBottomReached","onTopReached","flatListProps","onPressNewMessagesButton","onPressScrollToBottomButton","onPressImageMessage","STRINGS","useLocalization","colors","useUIKitTheme","left","right","useSafeAreaInsets","getMessagePressActions","useGetMessagePressActions","safeAreaLayout","paddingLeft","paddingRight","renderItem","useFreshCallback","_ref2","item","index","onPress","onLongPress","message","prevMessage","nextMessage","focused","startingPoint","createdAt","createElement","View","style","flex","backgroundColor","background","isFrozen","ChannelFrozenBanner","styles","frozenBanner","text","LABELS","CHANNEL_MESSAGE_LIST_FROZEN","data","keyExtractor","messageKeyExtractor","contentContainerStyle","frozenListPadding","newMsgButton","visible","scrollButton","_ref3","toast","useToast","openSheet","useBottomSheet","alert","useAlert","clipboardService","fileService","usePlatformService","features","useSendbirdChat","handleFailedMessage","sheetItems","title","CHANNEL_MESSAGE_FAILED_RETRY","catch","show","TOAST","RESEND_MSG_ERROR","CHANNEL_MESSAGE_FAILED_REMOVE","titleColor","ui","dialog","none","destructive","confirmDelete","CHANNEL_MESSAGE_DELETE_CONFIRM_TITLE","buttons","CHANNEL_MESSAGE_DELETE_CONFIRM_CANCEL","CHANNEL_MESSAGE_DELETE_CONFIRM_OK","DELETE_MSG_ERROR","msg","isUserMessage","isFileMessage","undefined","response","push","icon","CHANNEL_MESSAGE_COPY","setString","COPY_OK","isMyMessage","sendingStatus","CHANNEL_MESSAGE_EDIT","CHANNEL_MESSAGE_DELETE","CHANNEL_MESSAGE_SAVE","toMegabyte","size","DOWNLOAD_START","save","fileUrl","url","fileName","name","fileType","type","then","DOWNLOAD_OK","Logger","log","err","DOWNLOAD_ERROR","getFileType","getFileExtension","warn","DEPRECATION_WARNING","CHANNEL","ON_PRESS_IMAGE_MESSAGE","getAvailableUriFromFileMessage","SBUUtils","openURL","HeaderComponent","shouldRenderReaction","reactionEnabled","_ref4","onClose","ReactionAddons","BottomSheet","createStyleSheet","position","zIndex","top","paddingBottom","bottom","alignSelf","_default","React","forwardRef","exports"],"sources":["index.tsx"],"sourcesContent":["import React, { Ref } from 'react';\nimport { FlatList, FlatListProps, ListRenderItem, View } from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport {\n  BottomSheetItem,\n  ChannelFrozenBanner,\n  createStyleSheet,\n  useAlert,\n  useBottomSheet,\n  useToast,\n  useUIKitTheme,\n} from '@sendbird/uikit-react-native-foundation';\nimport {\n  Logger,\n  SendbirdFileMessage,\n  SendbirdGroupChannel,\n  SendbirdMessage,\n  SendbirdOpenChannel,\n  SendbirdUserMessage,\n  getAvailableUriFromFileMessage,\n  getFileExtension,\n  getFileType,\n  isMyMessage,\n  messageKeyExtractor,\n  shouldRenderReaction,\n  toMegabyte,\n  useFreshCallback,\n} from '@sendbird/uikit-utils';\n\nimport { DEPRECATION_WARNING } from '../../constants';\nimport type { UserProfileContextType } from '../../contexts/UserProfileCtx';\nimport { useLocalization, usePlatformService, useSendbirdChat } from '../../hooks/useContext';\nimport SBUUtils from '../../libs/SBUUtils';\nimport type { CommonComponent } from '../../types';\nimport ChatFlatList from '../ChatFlatList';\nimport { ReactionAddons } from '../ReactionAddons';\n\ntype PressActions = { onPress?: () => void; onLongPress?: () => void };\ntype HandleableMessage = SendbirdUserMessage | SendbirdFileMessage;\nexport type ChannelMessageListProps<T extends SendbirdGroupChannel | SendbirdOpenChannel> = {\n  enableMessageGrouping: boolean;\n  currentUserId?: string;\n  channel: T;\n  messages: SendbirdMessage[];\n  newMessages: SendbirdMessage[];\n  searchItem?: { startingPoint: number };\n\n  scrolledAwayFromBottom: boolean;\n  onScrolledAwayFromBottom: (value: boolean) => void;\n  onTopReached: () => void;\n  onBottomReached: () => void;\n  hasNext: () => boolean;\n\n  onPressNewMessagesButton: (animated?: boolean) => void;\n  onPressScrollToBottomButton: (animated?: boolean) => void;\n\n  onEditMessage: (message: HandleableMessage) => void;\n  onDeleteMessage: (message: HandleableMessage) => Promise<void>;\n  onResendFailedMessage: (failedMessage: HandleableMessage) => Promise<void>;\n  onPressMediaMessage?: (message: SendbirdFileMessage, deleteMessage: () => Promise<void>, uri: string) => void;\n\n  renderMessage: (props: {\n    focused: boolean;\n    message: SendbirdMessage;\n    prevMessage?: SendbirdMessage;\n    nextMessage?: SendbirdMessage;\n    onPress?: () => void;\n    onLongPress?: () => void;\n    onPressAvatar?: UserProfileContextType['show'];\n    channel: T;\n    currentUserId?: ChannelMessageListProps<T>['currentUserId'];\n    enableMessageGrouping: ChannelMessageListProps<T>['enableMessageGrouping'];\n  }) => React.ReactElement | null;\n  renderNewMessagesButton: null | CommonComponent<{\n    visible: boolean;\n    onPress: () => void;\n    newMessages: SendbirdMessage[];\n  }>;\n  renderScrollToBottomButton: null | CommonComponent<{\n    visible: boolean;\n    onPress: () => void;\n  }>;\n  flatListProps?: Omit<FlatListProps<SendbirdMessage>, 'data' | 'renderItem'>;\n\n  /** @deprecated Please use `onPressMediaMessage` instead **/\n  onPressImageMessage?: (message: SendbirdFileMessage, uri: string) => void;\n} & {\n  ref?: Ref<FlatList<SendbirdMessage>> | undefined;\n};\n\nconst ChannelMessageList = <T extends SendbirdGroupChannel | SendbirdOpenChannel>(\n  {\n    searchItem,\n    hasNext,\n    channel,\n    onEditMessage,\n    onDeleteMessage,\n    onResendFailedMessage,\n    onPressMediaMessage,\n    currentUserId,\n    renderNewMessagesButton,\n    renderScrollToBottomButton,\n    renderMessage,\n    messages,\n    newMessages,\n    enableMessageGrouping,\n    onScrolledAwayFromBottom,\n    scrolledAwayFromBottom,\n    onBottomReached,\n    onTopReached,\n    flatListProps,\n    onPressNewMessagesButton,\n    onPressScrollToBottomButton,\n    onPressImageMessage,\n  }: ChannelMessageListProps<T>,\n  ref: React.ForwardedRef<FlatList<SendbirdMessage>>,\n) => {\n  const { STRINGS } = useLocalization();\n  const { colors } = useUIKitTheme();\n  const { left, right } = useSafeAreaInsets();\n  const getMessagePressActions = useGetMessagePressActions({\n    channel,\n    currentUserId,\n    onEditMessage,\n    onDeleteMessage,\n    onResendFailedMessage,\n    onPressImageMessage,\n    onPressMediaMessage,\n  });\n\n  const safeAreaLayout = { paddingLeft: left, paddingRight: right };\n\n  const renderItem: ListRenderItem<SendbirdMessage> = useFreshCallback(({ item, index }) => {\n    const { onPress, onLongPress } = getMessagePressActions(item);\n    return renderMessage({\n      message: item,\n      prevMessage: messages[index + 1],\n      nextMessage: messages[index - 1],\n      onPress,\n      onLongPress,\n      enableMessageGrouping,\n      channel,\n      currentUserId,\n      focused: (searchItem?.startingPoint ?? -1) === item.createdAt,\n    });\n  });\n\n  return (\n    <View style={[{ flex: 1, backgroundColor: colors.background }, safeAreaLayout]}>\n      {channel.isFrozen && (\n        <ChannelFrozenBanner style={styles.frozenBanner} text={STRINGS.LABELS.CHANNEL_MESSAGE_LIST_FROZEN} />\n      )}\n      <ChatFlatList\n        {...flatListProps}\n        onTopReached={onTopReached}\n        onBottomReached={onBottomReached}\n        onScrolledAwayFromBottom={onScrolledAwayFromBottom}\n        ref={ref}\n        data={messages}\n        renderItem={renderItem}\n        keyExtractor={messageKeyExtractor}\n        contentContainerStyle={[\n          // { minHeight: '100%', justifyContent: 'flex-end' },\n          channel.isFrozen && styles.frozenListPadding,\n          flatListProps?.contentContainerStyle,\n        ]}\n      />\n      {renderNewMessagesButton && (\n        <View style={[styles.newMsgButton, safeAreaLayout]}>\n          {renderNewMessagesButton({\n            visible: newMessages.length > 0 && (hasNext() || scrolledAwayFromBottom),\n            onPress: () => onPressNewMessagesButton(),\n            newMessages,\n          })}\n        </View>\n      )}\n      {renderScrollToBottomButton && (\n        <View style={[styles.scrollButton, safeAreaLayout]}>\n          {renderScrollToBottomButton({\n            visible: hasNext() || scrolledAwayFromBottom,\n            onPress: () => onPressScrollToBottomButton(),\n          })}\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst useGetMessagePressActions = <T extends SendbirdGroupChannel | SendbirdOpenChannel>({\n  channel,\n  currentUserId,\n  onResendFailedMessage,\n  onEditMessage,\n  onDeleteMessage,\n  onPressImageMessage,\n  onPressMediaMessage,\n}: Pick<\n  ChannelMessageListProps<T>,\n  | 'channel'\n  | 'currentUserId'\n  | 'onEditMessage'\n  | 'onDeleteMessage'\n  | 'onResendFailedMessage'\n  | 'onPressImageMessage'\n  | 'onPressMediaMessage'\n>) => {\n  const { colors } = useUIKitTheme();\n  const { STRINGS } = useLocalization();\n  const toast = useToast();\n  const { openSheet } = useBottomSheet();\n  const { alert } = useAlert();\n  const { clipboardService, fileService } = usePlatformService();\n  const { features } = useSendbirdChat();\n\n  const handleFailedMessage = (message: HandleableMessage) => {\n    openSheet({\n      sheetItems: [\n        {\n          title: STRINGS.LABELS.CHANNEL_MESSAGE_FAILED_RETRY,\n          onPress: () => {\n            onResendFailedMessage(message).catch(() => toast.show(STRINGS.TOAST.RESEND_MSG_ERROR, 'error'));\n          },\n        },\n        {\n          title: STRINGS.LABELS.CHANNEL_MESSAGE_FAILED_REMOVE,\n          titleColor: colors.ui.dialog.default.none.destructive,\n          onPress: () => confirmDelete(message),\n        },\n      ],\n    });\n  };\n  const confirmDelete = (message: HandleableMessage) => {\n    alert({\n      title: STRINGS.LABELS.CHANNEL_MESSAGE_DELETE_CONFIRM_TITLE,\n      buttons: [\n        {\n          text: STRINGS.LABELS.CHANNEL_MESSAGE_DELETE_CONFIRM_CANCEL,\n        },\n        {\n          text: STRINGS.LABELS.CHANNEL_MESSAGE_DELETE_CONFIRM_OK,\n          style: 'destructive',\n          onPress: () => {\n            onDeleteMessage(message).catch(() => toast.show(STRINGS.TOAST.DELETE_MSG_ERROR, 'error'));\n          },\n        },\n      ],\n    });\n  };\n\n  return (msg: SendbirdMessage) => {\n    if (!msg.isUserMessage() && !msg.isFileMessage()) {\n      return { onPress: undefined, onLongPress: undefined };\n    }\n\n    const sheetItems: BottomSheetItem['sheetItems'] = [];\n    const response: PressActions = {\n      onPress: undefined,\n      onLongPress: undefined,\n    };\n\n    if (msg.isUserMessage()) {\n      sheetItems.push({\n        icon: 'copy',\n        title: STRINGS.LABELS.CHANNEL_MESSAGE_COPY,\n        onPress: () => {\n          clipboardService.setString(msg.message || '');\n          toast.show(STRINGS.TOAST.COPY_OK, 'success');\n        },\n      });\n\n      if (isMyMessage(msg, currentUserId) && msg.sendingStatus === 'succeeded') {\n        sheetItems.push(\n          {\n            icon: 'edit',\n            title: STRINGS.LABELS.CHANNEL_MESSAGE_EDIT,\n            onPress: () => onEditMessage(msg),\n          },\n          {\n            icon: 'delete',\n            title: STRINGS.LABELS.CHANNEL_MESSAGE_DELETE,\n            onPress: () => confirmDelete(msg),\n          },\n        );\n      }\n    }\n\n    if (msg.isFileMessage()) {\n      sheetItems.push({\n        icon: 'download',\n        title: STRINGS.LABELS.CHANNEL_MESSAGE_SAVE,\n        onPress: async () => {\n          if (toMegabyte(msg.size) > 4) {\n            toast.show(STRINGS.TOAST.DOWNLOAD_START, 'success');\n          }\n\n          fileService\n            .save({ fileUrl: msg.url, fileName: msg.name, fileType: msg.type })\n            .then((response) => {\n              toast.show(STRINGS.TOAST.DOWNLOAD_OK, 'success');\n              Logger.log('File saved to', response);\n            })\n            .catch((err) => {\n              toast.show(STRINGS.TOAST.DOWNLOAD_ERROR, 'error');\n              Logger.log('File save failure', err);\n            });\n        },\n      });\n\n      if (isMyMessage(msg, currentUserId) && msg.sendingStatus === 'succeeded') {\n        sheetItems.push({\n          icon: 'delete',\n          title: STRINGS.LABELS.CHANNEL_MESSAGE_DELETE,\n          onPress: () => confirmDelete(msg),\n        });\n      }\n\n      const fileType = getFileType(msg.type || getFileExtension(msg.name));\n      switch (fileType) {\n        case 'image':\n        case 'video':\n        case 'audio': {\n          response.onPress = () => {\n            if (onPressImageMessage && fileType === 'image') {\n              Logger.warn(DEPRECATION_WARNING.CHANNEL.ON_PRESS_IMAGE_MESSAGE);\n              onPressImageMessage(msg, getAvailableUriFromFileMessage(msg));\n            }\n            onPressMediaMessage?.(msg, () => onDeleteMessage(msg), getAvailableUriFromFileMessage(msg));\n          };\n          break;\n        }\n        default: {\n          response.onPress = () => SBUUtils.openURL(msg.url);\n          break;\n        }\n      }\n    }\n\n    if (sheetItems.length > 0) {\n      response.onLongPress = () => {\n        openSheet({\n          sheetItems,\n          HeaderComponent: shouldRenderReaction(channel, features.reactionEnabled)\n            ? ({ onClose }) => <ReactionAddons.BottomSheet message={msg} channel={channel} onClose={onClose} />\n            : undefined,\n        });\n      };\n    }\n\n    if (msg.sendingStatus === 'failed') {\n      response.onLongPress = () => handleFailedMessage(msg);\n      response.onPress = () => {\n        onResendFailedMessage(msg).catch(() => toast.show(STRINGS.TOAST.RESEND_MSG_ERROR, 'error'));\n      };\n    }\n\n    if (msg.sendingStatus === 'pending') {\n      response.onLongPress = undefined;\n      response.onPress = undefined;\n    }\n\n    return response;\n  };\n};\n\nconst styles = createStyleSheet({\n  frozenBanner: {\n    position: 'absolute',\n    zIndex: 999,\n    top: 8,\n    left: 8,\n    right: 8,\n  },\n  frozenListPadding: {\n    paddingBottom: 32,\n  },\n  newMsgButton: {\n    position: 'absolute',\n    zIndex: 999,\n    bottom: 10,\n    alignSelf: 'center',\n  },\n  scrollButton: {\n    position: 'absolute',\n    zIndex: 998,\n    bottom: 10,\n    right: 16,\n  },\n});\n\n// NOTE: Due to Generic inference is not working on forwardRef, we need to cast it as typeof ChannelMessageList and implicit `ref` prop\nexport default React.forwardRef(ChannelMessageList) as typeof ChannelMessageList;\n"],"mappings":"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"}