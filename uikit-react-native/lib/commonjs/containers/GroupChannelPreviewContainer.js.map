{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_uikitChatHooks","_uikitReactNativeFoundation","_uikitUtils","_ChannelCover","_interopRequireDefault","_constants","_useContext","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","iconMapper","audio","image","video","file","GroupChannelPreviewContainer","_ref","onPress","onLongPress","channel","currentUser","sdk","features","mentionManager","useSendbirdChat","STRINGS","useLocalization","colors","useUIKitTheme","typingUsers","setTypingUsers","useState","channelListTypingIndicatorEnabled","handlerId","useUniqHandlerId","useChannelHandler","onTypingStatusUpdated","eventChannel","isDifferentChannel","getTypingUsers","outgoingStatus","useMessageOutgoingStatus","lastMessage","bodyText","useIIFE","length","LABELS","TYPING_INDICATOR_TYPINGS","GROUP_CHANNEL_LIST","CHANNEL_PREVIEW_BODY","fileIcon","_channel$lastMessage","isFileMessage","undefined","getFileType","type","getFileExtension","name","titleCaptionIcon","channelListMessageReceiptStatusEnabled","isMyMessage","userId","createElement","LoadingSpinner","size","style","styles","Icon","icon","color","error","onBackground03","containerStyle","secondary","Pressable","delayLongPress","DEFAULT_LONG_PRESS_DELAY","GroupChannelPreview","customCover","coverUrl","title","CHANNEL_PREVIEW_TITLE","titleCaptionLeft","titleCaption","CHANNEL_PREVIEW_TITLE_CAPTION","body","bodyIcon","badgeCount","unreadMessageCount","mentioned","unreadMentionCount","mentionTrigger","config","trigger","memberCount","frozen","isFrozen","broadcast","isBroadcast","notificationOff","myPushTriggerOption","createStyleSheet","marginRight","broadcastCover","padding","borderRadius","_default","exports"],"sources":["GroupChannelPreviewContainer.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Pressable } from 'react-native';\n\nimport { useChannelHandler, useMessageOutgoingStatus } from '@sendbird/uikit-chat-hooks';\nimport {\n  GroupChannelPreview,\n  Icon,\n  LoadingSpinner,\n  createStyleSheet,\n  useUIKitTheme,\n} from '@sendbird/uikit-react-native-foundation';\nimport {\n  SendbirdGroupChannel,\n  SendbirdUser,\n  getFileExtension,\n  getFileType,\n  isDifferentChannel,\n  isMyMessage,\n  useIIFE,\n  useUniqHandlerId,\n} from '@sendbird/uikit-utils';\n\nimport ChannelCover from '../components/ChannelCover';\nimport { DEFAULT_LONG_PRESS_DELAY } from '../constants';\nimport { useLocalization, useSendbirdChat } from '../hooks/useContext';\n\nconst iconMapper = { audio: 'file-audio', image: 'photo', video: 'play', file: 'file-document' } as const;\n\ntype Props = {\n  channel: SendbirdGroupChannel;\n  onPress: () => void;\n  onLongPress: () => void;\n};\nconst GroupChannelPreviewContainer = ({ onPress, onLongPress, channel }: Props) => {\n  const { currentUser, sdk, features, mentionManager } = useSendbirdChat();\n  const { STRINGS } = useLocalization();\n  const { colors } = useUIKitTheme();\n\n  const [typingUsers, setTypingUsers] = useState<SendbirdUser[]>([]);\n\n  if (features.channelListTypingIndicatorEnabled) {\n    const handlerId = useUniqHandlerId('GroupChannelPreviewContainer_TypingIndicator');\n    useChannelHandler(sdk, handlerId, {\n      onTypingStatusUpdated(eventChannel) {\n        if (isDifferentChannel(channel, eventChannel)) return;\n        setTypingUsers(eventChannel.getTypingUsers());\n      },\n    });\n  }\n\n  const outgoingStatus = useMessageOutgoingStatus(sdk, channel, channel.lastMessage);\n\n  const bodyText = useIIFE(() => {\n    if (typingUsers.length > 0) return STRINGS.LABELS.TYPING_INDICATOR_TYPINGS(typingUsers) || '';\n    else return STRINGS.GROUP_CHANNEL_LIST.CHANNEL_PREVIEW_BODY(channel);\n  });\n\n  const fileIcon = useIIFE(() => {\n    if (!channel.lastMessage?.isFileMessage()) return undefined;\n    if (typingUsers.length > 0) return undefined;\n    return iconMapper[getFileType(channel.lastMessage.type || getFileExtension(channel.lastMessage.name))];\n  });\n\n  const titleCaptionIcon = useIIFE(() => {\n    if (!channel.lastMessage) return undefined;\n    if (!features.channelListMessageReceiptStatusEnabled) return undefined;\n    if (!isMyMessage(channel.lastMessage, currentUser?.userId)) return undefined;\n\n    if (outgoingStatus === 'PENDING') {\n      return <LoadingSpinner size={16} style={styles.titleCaptionIcon} />;\n    }\n\n    if (outgoingStatus === 'FAILED') {\n      return <Icon icon={'error'} size={16} color={colors.error} style={styles.titleCaptionIcon} />;\n    }\n\n    if (outgoingStatus === 'UNDELIVERED') {\n      return <Icon icon={'done'} size={16} color={colors.onBackground03} containerStyle={styles.titleCaptionIcon} />;\n    }\n\n    if (outgoingStatus === 'DELIVERED' || outgoingStatus === 'UNREAD') {\n      return <Icon icon={'done-all'} size={16} color={colors.onBackground03} style={styles.titleCaptionIcon} />;\n    }\n\n    if (outgoingStatus === 'READ') {\n      return <Icon icon={'done-all'} size={16} color={colors.secondary} style={styles.titleCaptionIcon} />;\n    }\n\n    return undefined;\n  });\n\n  return (\n    <Pressable delayLongPress={DEFAULT_LONG_PRESS_DELAY} onPress={onPress} onLongPress={onLongPress}>\n      <GroupChannelPreview\n        customCover={<ChannelCover channel={channel} size={56} />}\n        coverUrl={channel.coverUrl}\n        title={STRINGS.GROUP_CHANNEL_LIST.CHANNEL_PREVIEW_TITLE(currentUser?.userId ?? '', channel)}\n        titleCaptionLeft={titleCaptionIcon}\n        titleCaption={STRINGS.GROUP_CHANNEL_LIST.CHANNEL_PREVIEW_TITLE_CAPTION(channel)}\n        body={bodyText}\n        bodyIcon={fileIcon}\n        badgeCount={channel.unreadMessageCount}\n        mentioned={channel.unreadMentionCount > 0}\n        mentionTrigger={mentionManager.config.trigger}\n        memberCount={channel.memberCount > 2 ? channel.memberCount : undefined}\n        frozen={channel.isFrozen}\n        broadcast={channel.isBroadcast}\n        notificationOff={channel.myPushTriggerOption === 'off'}\n      />\n    </Pressable>\n  );\n};\n\nconst styles = createStyleSheet({\n  titleCaptionIcon: {\n    marginRight: 4,\n  },\n  broadcastCover: {\n    padding: 12,\n    borderRadius: 28,\n  },\n});\n\nexport default GroupChannelPreviewContainer;\n"],"mappings":"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"}