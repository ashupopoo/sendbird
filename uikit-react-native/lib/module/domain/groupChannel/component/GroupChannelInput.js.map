{"version":3,"names":["React","useContext","getGroupChannelChatAvailableState","ChannelInput","GroupChannelContexts","GroupChannelInput","props","channel","messageToEdit","setMessageToEdit","keyboardAvoidOffset","Fragment","chatAvailableState","createElement","inputMuted","muted","inputFrozen","frozen","inputDisabled","disabled","shouldRenderInput","onPressSendUserMessage","onPressSendFileMessage","onPressUpdateUserMessage","onPressUpdateFileMessage","SuggestedMentionList","onSendFileMessage","onSendUserMessage","onUpdateFileMessage","onUpdateUserMessage","memo"],"sources":["GroupChannelInput.tsx"],"sourcesContent":["import React, { useContext } from 'react';\n\nimport { getGroupChannelChatAvailableState } from '@sendbird/uikit-utils';\n\nimport ChannelInput from '../../../components/ChannelInput';\nimport { GroupChannelContexts } from '../module/moduleContext';\nimport type { GroupChannelProps } from '../types';\n\nconst GroupChannelInput = (props: GroupChannelProps['Input']) => {\n  const {\n    channel,\n    messageToEdit,\n    setMessageToEdit,\n    keyboardAvoidOffset = 0,\n  } = useContext(GroupChannelContexts.Fragment);\n\n  const chatAvailableState = getGroupChannelChatAvailableState(channel);\n\n  return (\n    <ChannelInput\n      channel={channel}\n      messageToEdit={messageToEdit}\n      setMessageToEdit={setMessageToEdit}\n      inputMuted={chatAvailableState.muted}\n      inputFrozen={chatAvailableState.frozen}\n      inputDisabled={chatAvailableState.disabled}\n      keyboardAvoidOffset={keyboardAvoidOffset}\n      shouldRenderInput={props.shouldRenderInput}\n      onPressSendUserMessage={props.onPressSendUserMessage}\n      onPressSendFileMessage={props.onPressSendFileMessage}\n      onPressUpdateUserMessage={props.onPressUpdateUserMessage}\n      onPressUpdateFileMessage={props.onPressUpdateFileMessage}\n      SuggestedMentionList={props.SuggestedMentionList}\n      onSendFileMessage={props.onSendFileMessage}\n      onSendUserMessage={props.onSendUserMessage}\n      onUpdateFileMessage={props.onUpdateFileMessage}\n      onUpdateUserMessage={props.onUpdateUserMessage}\n    />\n  );\n};\n\nexport default React.memo(GroupChannelInput);\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAEzC,SAASC,iCAAiC,QAAQ,uBAAuB;AAEzE,OAAOC,YAAY,MAAM,kCAAkC;AAC3D,SAASC,oBAAoB,QAAQ,yBAAyB;AAG9D,MAAMC,iBAAiB,GAAIC,KAAiC,IAAK;EAC/D,MAAM;IACJC,OAAO;IACPC,aAAa;IACbC,gBAAgB;IAChBC,mBAAmB,GAAG;EACxB,CAAC,GAAGT,UAAU,CAACG,oBAAoB,CAACO,QAAQ,CAAC;EAE7C,MAAMC,kBAAkB,GAAGV,iCAAiC,CAACK,OAAO,CAAC;EAErE,oBACEP,KAAA,CAAAa,aAAA,CAACV,YAAY;IACXI,OAAO,EAAEA,OAAQ;IACjBC,aAAa,EAAEA,aAAc;IAC7BC,gBAAgB,EAAEA,gBAAiB;IACnCK,UAAU,EAAEF,kBAAkB,CAACG,KAAM;IACrCC,WAAW,EAAEJ,kBAAkB,CAACK,MAAO;IACvCC,aAAa,EAAEN,kBAAkB,CAACO,QAAS;IAC3CT,mBAAmB,EAAEA,mBAAoB;IACzCU,iBAAiB,EAAEd,KAAK,CAACc,iBAAkB;IAC3CC,sBAAsB,EAAEf,KAAK,CAACe,sBAAuB;IACrDC,sBAAsB,EAAEhB,KAAK,CAACgB,sBAAuB;IACrDC,wBAAwB,EAAEjB,KAAK,CAACiB,wBAAyB;IACzDC,wBAAwB,EAAElB,KAAK,CAACkB,wBAAyB;IACzDC,oBAAoB,EAAEnB,KAAK,CAACmB,oBAAqB;IACjDC,iBAAiB,EAAEpB,KAAK,CAACoB,iBAAkB;IAC3CC,iBAAiB,EAAErB,KAAK,CAACqB,iBAAkB;IAC3CC,mBAAmB,EAAEtB,KAAK,CAACsB,mBAAoB;IAC/CC,mBAAmB,EAAEvB,KAAK,CAACuB;EAAoB,EAC/C;AAEN,CAAC;AAED,4BAAe7B,KAAK,CAAC8B,IAAI,CAACzB,iBAAiB,CAAC"}