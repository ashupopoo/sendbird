{"version":3,"names":["React","useCallback","useContext","useEffect","useState","useChannelHandler","getOpenChannelChatAvailableState","useUniqHandlerId","ChannelInput","UNKNOWN_USER_ID","useSendbirdChat","OpenChannelContexts","OpenChannelInput","props","sdk","currentUser","channel","messageToEdit","setMessageToEdit","keyboardAvoidOffset","Fragment","chatAvailableState","setChatAvailableState","frozen","muted","disabled","updateChatAvailableState","baseChannel","isOpenChannel","userId","then","handlerId","onChannelFrozen","onChannelUnfrozen","onUserMuted","onUserUnmuted","onOperatorUpdated","createElement","inputMuted","inputFrozen","isFrozen","inputDisabled","shouldRenderInput","onPressSendUserMessage","onPressSendFileMessage","onPressUpdateUserMessage","onPressUpdateFileMessage","memo"],"sources":["OpenChannelInput.tsx"],"sourcesContent":["import React, { useCallback, useContext, useEffect, useState } from 'react';\n\nimport { useChannelHandler } from '@sendbird/uikit-chat-hooks';\nimport { SendbirdBaseChannel, getOpenChannelChatAvailableState, useUniqHandlerId } from '@sendbird/uikit-utils';\n\nimport ChannelInput from '../../../components/ChannelInput';\nimport { UNKNOWN_USER_ID } from '../../../constants';\nimport { useSendbirdChat } from '../../../hooks/useContext';\nimport { OpenChannelContexts } from '../module/moduleContext';\nimport type { OpenChannelProps } from '../types';\n\nconst OpenChannelInput = (props: OpenChannelProps['Input']) => {\n  const { sdk, currentUser } = useSendbirdChat();\n\n  const {\n    channel,\n    messageToEdit,\n    setMessageToEdit,\n    keyboardAvoidOffset = 0,\n  } = useContext(OpenChannelContexts.Fragment);\n\n  const [chatAvailableState, setChatAvailableState] = useState({ frozen: false, muted: false, disabled: false });\n\n  const updateChatAvailableState = useCallback(\n    (baseChannel: SendbirdBaseChannel) => {\n      if (baseChannel.isOpenChannel()) {\n        const userId = currentUser?.userId ?? UNKNOWN_USER_ID;\n        getOpenChannelChatAvailableState(baseChannel, userId).then(setChatAvailableState);\n      }\n    },\n    [currentUser?.userId],\n  );\n\n  useEffect(() => {\n    updateChatAvailableState(channel);\n  }, [channel, updateChatAvailableState]);\n\n  const handlerId = useUniqHandlerId('OpenChannelInput');\n  useChannelHandler(\n    sdk,\n    handlerId,\n    {\n      onChannelFrozen(channel) {\n        updateChatAvailableState(channel);\n      },\n      onChannelUnfrozen(channel) {\n        updateChatAvailableState(channel);\n      },\n      onUserMuted(channel) {\n        updateChatAvailableState(channel);\n      },\n      onUserUnmuted(channel) {\n        updateChatAvailableState(channel);\n      },\n      onOperatorUpdated(channel) {\n        updateChatAvailableState(channel);\n      },\n    },\n    'open',\n  );\n\n  return (\n    <ChannelInput\n      channel={channel}\n      messageToEdit={messageToEdit}\n      setMessageToEdit={setMessageToEdit}\n      inputMuted={chatAvailableState.muted}\n      inputFrozen={channel.isFrozen}\n      inputDisabled={chatAvailableState.disabled}\n      keyboardAvoidOffset={keyboardAvoidOffset}\n      shouldRenderInput={props.shouldRenderInput}\n      onPressSendUserMessage={props.onPressSendUserMessage}\n      onPressSendFileMessage={props.onPressSendFileMessage}\n      onPressUpdateUserMessage={props.onPressUpdateUserMessage}\n      onPressUpdateFileMessage={props.onPressUpdateFileMessage}\n    />\n  );\n};\n\nexport default React.memo(OpenChannelInput);\n"],"mappings":"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"}