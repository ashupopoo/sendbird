{"version":3,"names":["useEffect","useRef","useState","Platform","replace","useFreshCallback","useSendbirdChat","useMentionTextInput","params","mentionManager","mentionedUsersRef","textInputRef","text","setText","selection","setSelection","start","end","shouldUseMentionedMessageTemplate","messageToEdit","result","templateToTextAndMentionedUsers","mentionedMessageTemplate","mentionedUsers","current","mentionedText","_params$messageToEdit","isUserMessage","message","onChangeText","_nextText","addedMentionedUser","prevText","nextText","offset","length","push","reconcileRangeOfMentionedUsers","filtered","lastSelection","removeMentionedUsersInSelection","Math","max","foundIndex","findIndex","it","rangeHelpers","overlaps","range","remainderLength","splice","onSelectionChange","e","nativeSelection","nativeEvent","setTimeout","mentionedUser","find","_textInputRef$current","selectionBlock","setNativeProps","OS","_textInputRef$current2"],"sources":["useMentionTextInput.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport type { NativeSyntheticEvent, TextInput, TextInputSelectionChangeEventData } from 'react-native';\nimport { Platform } from 'react-native';\n\nimport { SendbirdFileMessage, SendbirdUserMessage, replace, useFreshCallback } from '@sendbird/uikit-utils';\n\nimport type { MentionedUser } from '../types';\nimport { useSendbirdChat } from './useContext';\n\nconst useMentionTextInput = (params: { messageToEdit?: SendbirdUserMessage | SendbirdFileMessage }) => {\n  const { mentionManager } = useSendbirdChat();\n\n  const mentionedUsersRef = useRef<MentionedUser[]>([]);\n  const textInputRef = useRef<TextInput>();\n\n  const [text, setText] = useState('');\n  const [selection, setSelection] = useState({ start: 0, end: 0 });\n\n  // TODO: Refactor text edit logic more clearly\n  useEffect(() => {\n    if (mentionManager.shouldUseMentionedMessageTemplate(params.messageToEdit)) {\n      const result = mentionManager.templateToTextAndMentionedUsers(\n        params.messageToEdit.mentionedMessageTemplate,\n        params.messageToEdit.mentionedUsers,\n      );\n\n      mentionedUsersRef.current = result.mentionedUsers;\n      setText(result.mentionedText);\n    } else {\n      mentionedUsersRef.current = [];\n      if (params.messageToEdit?.isUserMessage()) {\n        setText(params.messageToEdit.message);\n      }\n    }\n  }, [params.messageToEdit]);\n\n  const onChangeText = useFreshCallback((_nextText: string, addedMentionedUser?: MentionedUser) => {\n    const prevText = text;\n    let nextText = _nextText;\n    let offset = nextText.length - prevText.length;\n\n    // Text clear\n    if (nextText === '') {\n      mentionedUsersRef.current = [];\n    }\n    // Text add\n    else if (offset > 0) {\n      /** Add mentioned user **/\n      if (addedMentionedUser) mentionedUsersRef.current.push(addedMentionedUser);\n\n      /** Reconcile mentioned users range on the right side of the selection **/\n      mentionedUsersRef.current = mentionManager.reconcileRangeOfMentionedUsers(\n        offset,\n        selection.end,\n        mentionedUsersRef.current,\n      );\n    }\n    // Text remove\n    else if (offset < 0) {\n      // Ranged remove\n      if (selection.start !== selection.end) {\n        /** Filter mentioned users in selection range **/\n        const { filtered, lastSelection } = mentionManager.removeMentionedUsersInSelection(\n          selection,\n          mentionedUsersRef.current,\n        );\n\n        /** Reconcile mentioned users range on the right side of the selection **/\n        mentionedUsersRef.current = mentionManager.reconcileRangeOfMentionedUsers(\n          offset,\n          Math.max(selection.end, lastSelection),\n          filtered,\n        );\n      }\n      // Single remove\n      else {\n        /** Find mentioned user who ranges in removed selection **/\n        const foundIndex = mentionedUsersRef.current.findIndex((it) =>\n          mentionManager.rangeHelpers.overlaps(it.range, selection, 'underMore'),\n        );\n        /** If found, remove from the mentioned user list and remove remainder text **/\n        if (foundIndex > -1) {\n          const it = mentionedUsersRef.current[foundIndex];\n          const remainderLength = it.range.end - it.range.start + offset;\n\n          offset = -remainderLength + offset;\n          nextText = replace(nextText, it.range.start, it.range.start + remainderLength, '');\n\n          mentionedUsersRef.current.splice(foundIndex, 1);\n        }\n\n        /** Reconcile mentioned users range on the right side of the selection **/\n        mentionedUsersRef.current = mentionManager.reconcileRangeOfMentionedUsers(\n          offset,\n          selection.end,\n          mentionedUsersRef.current,\n        );\n      }\n    }\n\n    setText(nextText);\n  });\n\n  return {\n    textInputRef,\n    selection,\n    onSelectionChange: useFreshCallback((e: NativeSyntheticEvent<TextInputSelectionChangeEventData>) => {\n      const nativeSelection = { ...e.nativeEvent.selection };\n\n      // NOTE: To synchronize call onSelectionChange after onChangeText called on each platform.\n      setTimeout(() => {\n        const mentionedUser = mentionedUsersRef.current.find((it) =>\n          mentionManager.rangeHelpers.overlaps(it.range, nativeSelection),\n        );\n\n        // Selection should be blocked if changed into mentioned area\n        if (mentionedUser) {\n          const selectionBlock = { start: mentionedUser.range.start, end: mentionedUser.range.end };\n          textInputRef.current?.setNativeProps({ selection: selectionBlock });\n          // BUG: setNativeProps called again when invoked onChangeText\n          //  https://github.com/facebook/react-native/issues/33520\n          if (Platform.OS === 'android') {\n            setTimeout(() => {\n              textInputRef.current?.setNativeProps({ selection: { start: 0 } });\n            }, 250);\n          }\n          setSelection(selectionBlock);\n        } else {\n          setSelection(nativeSelection);\n        }\n      }, 10);\n    }),\n    text,\n    onChangeText,\n    mentionedUsers: mentionedUsersRef.current,\n  };\n};\n\nexport default useMentionTextInput;\n"],"mappings":"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"}