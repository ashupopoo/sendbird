{"version":3,"names":["React","useCallback","useContext","useState","useSafeAreaInsets","Modal","OutlinedButton","ProfileCard","createStyleSheet","Logger","PASS","getDefaultGroupChannelCreateParams","useIIFE","LocalizationContext","SendbirdChatContext","WARN_onCreateChannel","UserProfileContext","createContext","UserProfileProvider","_ref","children","onCreateChannel","onBeforeCreateChannel","statusBarTranslucent","chatContext","localizationContext","Error","__DEV__","warn","bottom","left","right","user","setUser","visible","setVisible","hideMessageButton","setHideMessageButton","show","options","Boolean","hide","onDismiss","undefined","userProfileButton","isMe","currentUser","userId","onPressMessageButton","_chatContext$currentU","params","invitedUserIds","currentUserId","processedParams","channel","sdk","groupChannel","createChannel","createElement","onPress","STRINGS","PROFILE_CARD","BUTTON_MESSAGE","Provider","value","type","onClose","backgroundStyle","styles","modal","containerStyle","profileCardContainer","paddingLeft","paddingRight","paddingBottom","uri","profileUrl","username","nickname","LABELS","USER_NO_NAME","bodyLabel","BODY_LABEL","body","BODY","button","justifyContent","borderTopLeftRadius","borderTopRightRadius"],"sources":["UserProfileCtx.tsx"],"sourcesContent":["import React, { useCallback, useContext, useState } from 'react';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport { Modal, OutlinedButton, ProfileCard, createStyleSheet } from '@sendbird/uikit-react-native-foundation';\nimport type {\n  SendbirdGroupChannel,\n  SendbirdGroupChannelCreateParams,\n  SendbirdMember,\n  SendbirdUser,\n} from '@sendbird/uikit-utils';\nimport { Logger, PASS, getDefaultGroupChannelCreateParams, useIIFE } from '@sendbird/uikit-utils';\n\nimport { LocalizationContext } from '../contexts/LocalizationCtx';\nimport { SendbirdChatContext } from '../contexts/SendbirdChatCtx';\n\ntype OnCreateChannel = (channel: SendbirdGroupChannel) => void;\ntype OnBeforeCreateChannel = (\n  channelParams: SendbirdGroupChannelCreateParams,\n  users: SendbirdUser[] | SendbirdMember[],\n) => SendbirdGroupChannelCreateParams | Promise<SendbirdGroupChannelCreateParams>;\n\ntype ShowOptions = {\n  hideMessageButton?: boolean;\n};\n\nexport type UserProfileContextType = {\n  show(user: SendbirdUser | SendbirdMember, options?: ShowOptions): void;\n  hide(): void;\n};\n\ntype Props = React.PropsWithChildren<{\n  onCreateChannel?: OnCreateChannel;\n  onBeforeCreateChannel?: OnBeforeCreateChannel;\n  statusBarTranslucent?: boolean;\n}>;\n\nlet WARN_onCreateChannel = false;\n\nexport const UserProfileContext = React.createContext<UserProfileContextType | null>(null);\nexport const UserProfileProvider = ({\n  children,\n  onCreateChannel,\n  onBeforeCreateChannel = PASS,\n  statusBarTranslucent = true,\n}: Props) => {\n  const chatContext = useContext(SendbirdChatContext);\n  const localizationContext = useContext(LocalizationContext);\n\n  if (!chatContext) throw new Error('SendbirdChatContext is not provided');\n  if (!localizationContext) throw new Error('LocalizationContext is not provided');\n\n  if (__DEV__ && !WARN_onCreateChannel && !onCreateChannel) {\n    Logger.warn(\n      'You should pass `userProfile.onCreateChannel` prop to SendbirdUIKitContainer if want to use message in a user profile',\n    );\n    WARN_onCreateChannel = true;\n  }\n\n  const { bottom, left, right } = useSafeAreaInsets();\n\n  const [user, setUser] = useState<SendbirdUser | SendbirdMember>();\n  const [visible, setVisible] = useState(false);\n  const [hideMessageButton, setHideMessageButton] = useState(false);\n\n  const show: UserProfileContextType['show'] = useCallback((user, options) => {\n    setUser(user);\n    setVisible(true);\n    setHideMessageButton(Boolean(options?.hideMessageButton));\n  }, []);\n\n  const hide: UserProfileContextType['hide'] = useCallback(() => {\n    setVisible(false);\n  }, []);\n\n  const onDismiss = () => {\n    setUser(undefined);\n    setHideMessageButton(false);\n  };\n\n  const userProfileButton = useIIFE(() => {\n    const isMe = chatContext.currentUser && user?.userId === chatContext.currentUser.userId;\n    if (isMe) return undefined;\n    if (hideMessageButton) return undefined;\n\n    const onPressMessageButton = async () => {\n      if (user) {\n        const params = getDefaultGroupChannelCreateParams({\n          invitedUserIds: [user.userId],\n          currentUserId: chatContext.currentUser?.userId,\n        });\n\n        const processedParams = await onBeforeCreateChannel(params, [user]);\n        hide();\n        const channel = await chatContext.sdk.groupChannel.createChannel(processedParams);\n\n        if (onCreateChannel) {\n          onCreateChannel(channel);\n        } else {\n          Logger.warn(\n            'Please set `onCreateChannel` before message to user from profile card, see `userProfile` prop in the `SendbirdUIKitContainer` props',\n          );\n        }\n      }\n    };\n\n    return (\n      <OutlinedButton onPress={onPressMessageButton}>\n        {localizationContext.STRINGS.PROFILE_CARD.BUTTON_MESSAGE}\n      </OutlinedButton>\n    );\n  });\n\n  return (\n    <UserProfileContext.Provider value={{ show, hide }}>\n      {children}\n      <Modal\n        type={'slide'}\n        onClose={hide}\n        onDismiss={onDismiss}\n        visible={visible && Boolean(user)}\n        backgroundStyle={styles.modal}\n        statusBarTranslucent={statusBarTranslucent}\n      >\n        {user && (\n          <ProfileCard\n            containerStyle={[\n              styles.profileCardContainer,\n              { paddingLeft: left, paddingRight: right, paddingBottom: bottom },\n            ]}\n            uri={user.profileUrl}\n            username={user.nickname || localizationContext.STRINGS.LABELS.USER_NO_NAME}\n            bodyLabel={localizationContext.STRINGS.PROFILE_CARD.BODY_LABEL}\n            body={localizationContext.STRINGS.PROFILE_CARD.BODY(user)}\n            button={userProfileButton}\n          />\n        )}\n      </Modal>\n    </UserProfileContext.Provider>\n  );\n};\n\nconst styles = createStyleSheet({\n  modal: {\n    justifyContent: 'flex-end',\n  },\n  profileCardContainer: {\n    borderTopLeftRadius: 8,\n    borderTopRightRadius: 8,\n  },\n});\n"],"mappings":"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"}