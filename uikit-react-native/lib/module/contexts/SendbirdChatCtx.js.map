{"version":3,"names":["React","useCallback","useState","useAppFeatures","confirmAndMarkAsDelivered","useAppState","useForceUpdate","SendbirdChatContext","createContext","SendbirdChatProvider","_ref","children","sdkInstance","emojiManager","mentionManager","imageCompressionConfig","enableAutoPushTokenRegistration","enableChannelListMessageReceiptStatus","enableChannelListTypingIndicator","enableUseUserIdForNickname","enableUserMention","enableImageCompression","enableMessageSearch","currentUser","_setCurrentUser","forceUpdate","appFeatures","setCurrentUser","user","updateCurrentUserInfo","nickname","profile","Error","params","profileUrl","profileImage","markAsDeliveredWithChannel","channel","deliveryReceiptEnabled","status","connectionState","setForegroundState","setBackgroundState","value","sdk","features","autoPushTokenRegistrationEnabled","channelListTypingIndicatorEnabled","channelListMessageReceiptStatusEnabled","useUserIdForNicknameEnabled","userMentionEnabled","imageCompressionEnabled","messageSearchEnabled","createElement","Provider"],"sources":["SendbirdChatCtx.tsx"],"sourcesContent":["import React, { useCallback, useState } from 'react';\n\nimport { useAppFeatures } from '@sendbird/uikit-chat-hooks';\nimport type {\n  SendbirdChatSDK,\n  SendbirdGroupChannel,\n  SendbirdUser,\n  SendbirdUserUpdateParams,\n} from '@sendbird/uikit-utils';\nimport { confirmAndMarkAsDelivered, useAppState, useForceUpdate } from '@sendbird/uikit-utils';\n\nimport type EmojiManager from '../libs/EmojiManager';\nimport type ImageCompressionConfig from '../libs/ImageCompressionConfig';\nimport type MentionManager from '../libs/MentionManager';\nimport type { FileType } from '../platform/types';\n\nexport interface UIKitFeaturesInSendbirdChatContext {\n  enableAutoPushTokenRegistration: boolean;\n  enableChannelListTypingIndicator: boolean;\n  enableChannelListMessageReceiptStatus: boolean;\n  enableUseUserIdForNickname: boolean;\n  enableUserMention: boolean;\n  enableImageCompression: boolean;\n  enableMessageSearch: boolean;\n}\n\ninterface Props extends UIKitFeaturesInSendbirdChatContext, React.PropsWithChildren {\n  sdkInstance: SendbirdChatSDK;\n  emojiManager: EmojiManager;\n  mentionManager: MentionManager;\n  imageCompressionConfig: ImageCompressionConfig;\n}\n\nexport type SendbirdChatContextType = {\n  sdk: SendbirdChatSDK;\n  emojiManager: EmojiManager;\n  mentionManager: MentionManager;\n  imageCompressionConfig: ImageCompressionConfig;\n  currentUser?: SendbirdUser;\n  setCurrentUser: React.Dispatch<React.SetStateAction<SendbirdUser | undefined>>;\n\n  // helper functions\n  updateCurrentUserInfo: (nickname?: string, profile?: string | FileType) => Promise<SendbirdUser>;\n  markAsDeliveredWithChannel: (channel: SendbirdGroupChannel) => void;\n\n  features: {\n    // RN UIKit features\n    autoPushTokenRegistrationEnabled: boolean;\n\n    // UIKit features\n    channelListTypingIndicatorEnabled: boolean;\n    channelListMessageReceiptStatusEnabled: boolean;\n    useUserIdForNicknameEnabled: boolean;\n    userMentionEnabled: boolean;\n    imageCompressionEnabled: boolean;\n    messageSearchEnabled: boolean;\n\n    // Sendbird application features\n    deliveryReceiptEnabled: boolean;\n    broadcastChannelEnabled: boolean;\n    superGroupChannelEnabled: boolean;\n    reactionEnabled: boolean;\n  };\n};\n\nexport const SendbirdChatContext = React.createContext<SendbirdChatContextType | null>(null);\nexport const SendbirdChatProvider = ({\n  children,\n  sdkInstance,\n  emojiManager,\n  mentionManager,\n  imageCompressionConfig,\n  enableAutoPushTokenRegistration,\n  enableChannelListMessageReceiptStatus,\n  enableChannelListTypingIndicator,\n  enableUseUserIdForNickname,\n  enableUserMention,\n  enableImageCompression,\n  enableMessageSearch,\n}: Props) => {\n  const [currentUser, _setCurrentUser] = useState<SendbirdUser>();\n  const forceUpdate = useForceUpdate();\n  const appFeatures = useAppFeatures(sdkInstance);\n\n  const setCurrentUser: SendbirdChatContextType['setCurrentUser'] = useCallback((user) => {\n    // NOTE: Sendbird SDK handle User object is always same object, so force update after setCurrentUser\n    _setCurrentUser(user);\n    forceUpdate();\n  }, []);\n\n  const updateCurrentUserInfo: SendbirdChatContextType['updateCurrentUserInfo'] = useCallback(\n    async (nickname, profile) => {\n      let user = currentUser;\n\n      if (!user) throw new Error('Current user is not defined, please connect using `useConnection()` hook first');\n\n      const params: SendbirdUserUpdateParams = {};\n\n      if (!nickname) {\n        params.nickname = user.nickname;\n      } else {\n        params.nickname = nickname;\n      }\n\n      if (!profile) {\n        params.profileUrl = user.profileUrl;\n      } else if (typeof profile === 'string') {\n        params.profileUrl = profile;\n      } else if (typeof profile === 'object') {\n        params.profileImage = profile;\n      } else {\n        throw new Error(`Cannot update profile, not supported profile type(${typeof profile})`);\n      }\n\n      user = await sdkInstance.updateCurrentUserInfo(params);\n\n      setCurrentUser(user);\n      return user;\n    },\n    [sdkInstance, currentUser, setCurrentUser],\n  );\n\n  const markAsDeliveredWithChannel: SendbirdChatContextType['markAsDeliveredWithChannel'] = useCallback(\n    (channel: SendbirdGroupChannel) => {\n      if (appFeatures.deliveryReceiptEnabled) confirmAndMarkAsDelivered([channel]);\n    },\n    [sdkInstance, appFeatures.deliveryReceiptEnabled],\n  );\n\n  useAppState('change', (status) => {\n    // 'active' | 'background' | 'inactive' | 'unknown' | 'extension';\n    if (status === 'active') sdkInstance.connectionState === 'CLOSED' && sdkInstance.setForegroundState();\n    else if (status === 'background') sdkInstance.connectionState === 'OPEN' && sdkInstance.setBackgroundState();\n  });\n\n  const value: SendbirdChatContextType = {\n    sdk: sdkInstance,\n    emojiManager,\n    mentionManager,\n    imageCompressionConfig,\n    currentUser,\n    setCurrentUser,\n\n    updateCurrentUserInfo,\n    markAsDeliveredWithChannel,\n\n    features: {\n      ...appFeatures,\n      autoPushTokenRegistrationEnabled: enableAutoPushTokenRegistration,\n      channelListTypingIndicatorEnabled: enableChannelListTypingIndicator,\n      channelListMessageReceiptStatusEnabled: enableChannelListMessageReceiptStatus,\n      useUserIdForNicknameEnabled: enableUseUserIdForNickname,\n      userMentionEnabled: enableUserMention,\n      imageCompressionEnabled: enableImageCompression,\n      messageSearchEnabled: enableMessageSearch,\n    },\n  };\n\n  return <SendbirdChatContext.Provider value={value}>{children}</SendbirdChatContext.Provider>;\n};\n"],"mappings":"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"}