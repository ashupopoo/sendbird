{"version":3,"names":["React","useMemo","useState","SendbirdError","useOpenChannelMessages","useToast","NOOP","PASS","SBErrorCode","messageComparator","useFreshCallback","OpenChannelMessageRenderer","ScrollToBottomButton","StatusComposition","UNKNOWN_USER_ID","createOpenChannelModule","useLocalization","useSendbirdChat","useUserProfile","pubsub","createOpenChannelFragment","initModule","OpenChannelModule","_ref","channel","onChannelDeleted","onPressHeaderLeft","onPressHeaderRightWithSettings","onPressHeaderRightWithParticipants","onBeforeSendUserMessage","onBeforeSendFileMessage","onBeforeUpdateUserMessage","onBeforeUpdateFileMessage","onPressMediaMessage","renderMessage","renderNewMessagesButton","renderScrollToBottomButton","props","createElement","enableMessageGrouping","keyboardAvoidOffset","flatListProps","queryCreator","sortComparator","sdk","currentUser","STRINGS","show","showToast","showUserProfile","openChannelPubSub","messages","newMessages","next","prev","hasNext","sendFileMessage","sendUserMessage","updateFileMessage","updateUserMessage","resendMessage","deleteMessage","loading","userId","onError","error","code","RESOURCE_NOT_FOUND","CHANNEL_NOT_FOUND","BANNED_USER_SEND_MESSAGE_NOT_ALLOWED","TOAST","GET_CHANNEL_ERROR","UNKNOWN_ERROR","onMessagesReceived","publish","type","data","isOperator","_renderMessage","_extends","onPressAvatar","memoizedFlatListProps","ListEmptyComponent","StatusEmpty","contentContainerStyle","flexGrow","onPending","message","onSent","onPressSendUserMessage","params","processedParams","onPressSendFileMessage","onPressUpdateUserMessage","messageId","onPressUpdateFileMessage","Provider","Header","rightIconName","onPressHeaderRight","LoadingComponent","StatusLoading","MessageList","currentUserId","onTopReached","onBottomReached","scrolledAwayFromBottom","onScrolledAwayFromBottom","onResendFailedMessage","onDeleteMessage","Input","shouldRenderInput"],"sources":["createOpenChannelFragment.tsx"],"sourcesContent":["import React, { useMemo, useState } from 'react';\n\nimport { SendbirdError } from '@sendbird/chat';\nimport { useOpenChannelMessages } from '@sendbird/uikit-chat-hooks';\nimport { useToast } from '@sendbird/uikit-react-native-foundation';\nimport {\n  NOOP,\n  PASS,\n  SBErrorCode,\n  SendbirdFileMessage,\n  SendbirdUserMessage,\n  messageComparator,\n  useFreshCallback,\n} from '@sendbird/uikit-utils';\n\nimport OpenChannelMessageRenderer from '../components/OpenChannelMessageRenderer';\nimport ScrollToBottomButton from '../components/ScrollToBottomButton';\nimport StatusComposition from '../components/StatusComposition';\nimport { UNKNOWN_USER_ID } from '../constants';\nimport { createOpenChannelModule } from '../domain/openChannel';\nimport type {\n  OpenChannelFragment,\n  OpenChannelModule,\n  OpenChannelProps,\n  OpenChannelPubSubContextPayload,\n} from '../domain/openChannel/types';\nimport { useLocalization, useSendbirdChat, useUserProfile } from '../hooks/useContext';\nimport pubsub from '../utils/pubsub';\n\nconst createOpenChannelFragment = (initModule?: Partial<OpenChannelModule>): OpenChannelFragment => {\n  const OpenChannelModule = createOpenChannelModule(initModule);\n\n  return ({\n    channel,\n    onChannelDeleted = NOOP,\n    onPressHeaderLeft = NOOP,\n    onPressHeaderRightWithSettings = NOOP,\n    onPressHeaderRightWithParticipants = NOOP,\n\n    onBeforeSendUserMessage = PASS,\n    onBeforeSendFileMessage = PASS,\n    onBeforeUpdateUserMessage = PASS,\n    onBeforeUpdateFileMessage = PASS,\n    onPressMediaMessage = NOOP,\n\n    renderMessage,\n    renderNewMessagesButton = () => null,\n    renderScrollToBottomButton = (props) => <ScrollToBottomButton {...props} />,\n\n    enableMessageGrouping = true,\n    keyboardAvoidOffset,\n    flatListProps,\n    queryCreator,\n    sortComparator = messageComparator,\n  }) => {\n    const { sdk, currentUser } = useSendbirdChat();\n\n    const { STRINGS } = useLocalization();\n    const { show: showToast } = useToast();\n    const { show: showUserProfile } = useUserProfile();\n\n    const [openChannelPubSub] = useState(() => pubsub<OpenChannelPubSubContextPayload>());\n\n    const {\n      messages,\n      newMessages,\n      next,\n      prev,\n      hasNext,\n      sendFileMessage,\n      sendUserMessage,\n      updateFileMessage,\n      updateUserMessage,\n      resendMessage,\n      deleteMessage,\n      loading,\n    } = useOpenChannelMessages(sdk, channel, currentUser?.userId, {\n      queryCreator,\n      sortComparator,\n      onChannelDeleted,\n      onError(error) {\n        if (error instanceof SendbirdError) {\n          switch (error.code) {\n            case SBErrorCode.RESOURCE_NOT_FOUND:\n            case SBErrorCode.CHANNEL_NOT_FOUND:\n            case SBErrorCode.BANNED_USER_SEND_MESSAGE_NOT_ALLOWED: {\n              return showToast(STRINGS.TOAST.GET_CHANNEL_ERROR, 'error');\n            }\n          }\n        }\n\n        showToast(STRINGS.TOAST.UNKNOWN_ERROR, 'error');\n      },\n      onMessagesReceived(messages) {\n        openChannelPubSub.publish({ type: 'MESSAGES_RECEIVED', data: { messages } });\n      },\n    });\n\n    const isOperator = channel.isOperator(currentUser?.userId ?? UNKNOWN_USER_ID);\n\n    const _renderMessage: OpenChannelProps['MessageList']['renderMessage'] = useFreshCallback((props) => {\n      if (renderMessage) return renderMessage(props);\n      return <OpenChannelMessageRenderer {...props} onPressAvatar={showUserProfile} />;\n    });\n\n    const memoizedFlatListProps = useMemo(\n      () => ({\n        ListEmptyComponent: <OpenChannelModule.StatusEmpty />,\n        contentContainerStyle: { flexGrow: 1 },\n        ...flatListProps,\n      }),\n      [loading, flatListProps],\n    );\n\n    const onPending = (message: SendbirdFileMessage | SendbirdUserMessage) => {\n      openChannelPubSub.publish({ type: 'MESSAGE_SENT_PENDING', data: { message } });\n    };\n    const onSent = (message: SendbirdFileMessage | SendbirdUserMessage) => {\n      openChannelPubSub.publish({ type: 'MESSAGE_SENT_SUCCESS', data: { message } });\n    };\n\n    const onPressSendUserMessage: OpenChannelProps['Input']['onPressSendUserMessage'] = useFreshCallback(\n      async (params) => {\n        const processedParams = await onBeforeSendUserMessage(params);\n        const message = await sendUserMessage(processedParams, onPending);\n        onSent(message);\n      },\n    );\n    const onPressSendFileMessage: OpenChannelProps['Input']['onPressSendFileMessage'] = useFreshCallback(\n      async (params) => {\n        const processedParams = await onBeforeSendFileMessage(params);\n        const message = await sendFileMessage(processedParams, onPending);\n        onSent(message);\n      },\n    );\n    const onPressUpdateUserMessage: OpenChannelProps['Input']['onPressUpdateUserMessage'] = useFreshCallback(\n      async (message, params) => {\n        const processedParams = await onBeforeUpdateUserMessage(params);\n        await updateUserMessage(message.messageId, processedParams);\n      },\n    );\n    const onPressUpdateFileMessage: OpenChannelProps['Input']['onPressUpdateFileMessage'] = useFreshCallback(\n      async (message, params) => {\n        const processedParams = await onBeforeUpdateFileMessage(params);\n        await updateFileMessage(message.messageId, processedParams);\n      },\n    );\n\n    return (\n      <OpenChannelModule.Provider\n        openChannelPubSub={openChannelPubSub}\n        channel={channel}\n        keyboardAvoidOffset={keyboardAvoidOffset}\n      >\n        <OpenChannelModule.Header\n          onPressHeaderLeft={onPressHeaderLeft}\n          rightIconName={isOperator ? 'info' : 'members'}\n          onPressHeaderRight={isOperator ? onPressHeaderRightWithSettings : onPressHeaderRightWithParticipants}\n        />\n        <StatusComposition loading={loading} LoadingComponent={<OpenChannelModule.StatusLoading />}>\n          <OpenChannelModule.MessageList\n            channel={channel}\n            hasNext={hasNext}\n            enableMessageGrouping={enableMessageGrouping}\n            currentUserId={currentUser?.userId}\n            renderMessage={_renderMessage}\n            messages={messages}\n            newMessages={newMessages}\n            onTopReached={prev}\n            onBottomReached={next}\n            scrolledAwayFromBottom={false}\n            onScrolledAwayFromBottom={NOOP}\n            renderNewMessagesButton={renderNewMessagesButton}\n            renderScrollToBottomButton={renderScrollToBottomButton}\n            onResendFailedMessage={resendMessage}\n            onDeleteMessage={deleteMessage}\n            onPressMediaMessage={onPressMediaMessage}\n            flatListProps={memoizedFlatListProps}\n          />\n          <OpenChannelModule.Input\n            shouldRenderInput\n            onPressSendUserMessage={onPressSendUserMessage}\n            onPressSendFileMessage={onPressSendFileMessage}\n            onPressUpdateUserMessage={onPressUpdateUserMessage}\n            onPressUpdateFileMessage={onPressUpdateFileMessage}\n          />\n        </StatusComposition>\n      </OpenChannelModule.Provider>\n    );\n  };\n};\n\nexport default createOpenChannelFragment;\n"],"mappings":"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"}