{"version":3,"names":["React","useEffect","useRef","useState","KeyboardAvoidingView","Platform","View","useSafeAreaInsets","createStyleSheet","useUIKitTheme","replace","useIIFE","useSendbirdChat","useMentionTextInput","EditInput","SendInput","AUTO_FOCUS","select","ios","android","default","KEYBOARD_AVOID_VIEW_BEHAVIOR","undefined","GET_INPUT_KEY","shouldReset","ChannelInput","props","channel","keyboardAvoidOffset","messageToEdit","setMessageToEdit","top","left","right","bottom","colors","features","mentionManager","selection","onSelectionChange","textInputRef","text","onChangeText","mentionedUsers","inputMode","isFileMessage","mentionAvailable","userMentionEnabled","isGroupChannel","isBroadcast","inputKeyToRemount","length","inputHeight","setInputHeight","styles","inputDefault","height","useTypingTrigger","useTextPersistenceOnDisabled","inputDisabled","useAutoFocusOnEditMode","onPressToMention","user","searchStringRange","mentionedMessageText","asMentionedMessageText","range","start","end","shouldRenderInput","createElement","SafeAreaBottom","Fragment","keyboardVerticalOffset","behavior","style","paddingLeft","paddingRight","backgroundColor","background","onLayout","e","nativeEvent","layout","inputContainer","_extends","key","ref","autoFocus","SuggestedMentionList","topInset","bottomInset","endTyping","startTyping","setText","chatDisabled","textTmpRef","current","isUserMessage","setTimeout","_textInputRef$current","focus","_ref","justifyContent","width","memo"],"sources":["index.tsx"],"sourcesContent":["import React, { MutableRefObject, useEffect, useRef, useState } from 'react';\nimport { KeyboardAvoidingView, Platform, TextInput, View } from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport { createStyleSheet, useUIKitTheme } from '@sendbird/uikit-react-native-foundation';\nimport {\n  SendbirdBaseChannel,\n  SendbirdBaseMessage,\n  SendbirdFileMessage,\n  SendbirdFileMessageCreateParams,\n  SendbirdFileMessageUpdateParams,\n  SendbirdMember,\n  SendbirdUserMessage,\n  SendbirdUserMessageCreateParams,\n  SendbirdUserMessageUpdateParams,\n  replace,\n  useIIFE,\n} from '@sendbird/uikit-utils';\n\nimport { useSendbirdChat } from '../../hooks/useContext';\nimport useMentionTextInput from '../../hooks/useMentionTextInput';\nimport type { FileType } from '../../platform/types';\nimport type { MentionedUser, Range } from '../../types';\nimport EditInput from './EditInput';\nimport SendInput from './SendInput';\n\ntype UserMessageMentionParams = Required<{\n  messageTemplate: SendbirdUserMessageCreateParams['mentionedMessageTemplate'];\n  userIds: SendbirdUserMessageCreateParams['mentionedUserIds'];\n  type: SendbirdUserMessageCreateParams['mentionType'];\n}>;\n\nexport type SuggestedMentionListProps = {\n  text: string;\n  selection: Range;\n  topInset: number;\n  bottomInset: number;\n  inputHeight: number;\n  onPressToMention: (user: SendbirdMember, searchStringRange: Range) => void;\n  mentionedUsers: MentionedUser[];\n};\n\nexport type ChannelInputProps = {\n  // default\n  channel: SendbirdBaseChannel;\n  shouldRenderInput: boolean;\n  keyboardAvoidOffset: number;\n\n  // default actions\n  onPressSendUserMessage: (params: SendbirdUserMessageCreateParams) => Promise<void>;\n  onPressSendFileMessage: (params: SendbirdFileMessageCreateParams) => Promise<void>;\n  onPressUpdateUserMessage: (message: SendbirdUserMessage, params: SendbirdUserMessageUpdateParams) => Promise<void>;\n  onPressUpdateFileMessage: (message: SendbirdFileMessage, params: SendbirdFileMessageUpdateParams) => Promise<void>;\n\n  // input status\n  inputFrozen: boolean;\n  inputMuted: boolean;\n  inputDisabled: boolean;\n\n  // edit\n  messageToEdit: undefined | SendbirdUserMessage | SendbirdFileMessage;\n  setMessageToEdit: (message?: undefined | SendbirdUserMessage | SendbirdFileMessage) => void;\n\n  // mention\n  SuggestedMentionList?: (props: SuggestedMentionListProps) => JSX.Element | null;\n\n  /** @deprecated Please use `onPressSendUserMessage` **/\n  onSendFileMessage?: (file: FileType) => Promise<void>;\n  /** @deprecated Please use `onPressSendFileMessage` **/\n  onSendUserMessage?: (text: string, mention?: UserMessageMentionParams) => Promise<void>;\n  /** @deprecated Please use `onPressUpdateUserMessage` **/\n  onUpdateFileMessage?: (editedFile: FileType, message: SendbirdFileMessage) => Promise<void>;\n  /** @deprecated Please use `onPressUpdateFileMessage` **/\n  onUpdateUserMessage?: (\n    editedText: string,\n    message: SendbirdUserMessage,\n    mention?: UserMessageMentionParams,\n  ) => Promise<void>;\n};\n\nconst AUTO_FOCUS = Platform.select({ ios: false, android: true, default: false });\nconst KEYBOARD_AVOID_VIEW_BEHAVIOR = Platform.select({ ios: 'padding' as const, default: undefined });\n\n// FIXME(iOS): Dynamic style does not work properly when typing the CJK. (https://github.com/facebook/react-native/issues/26107)\n//  To workaround temporarily, change the key for re-mount the component.\n//  -> This will affect to keyboard blur when add/remove first mentioned user.\nconst GET_INPUT_KEY = (shouldReset: boolean) => (shouldReset ? 'uikit-input-clear' : 'uikit-input');\n\n// TODO: Refactor 'Edit' mode to clearly\nconst ChannelInput = (props: ChannelInputProps) => {\n  const { channel, keyboardAvoidOffset, messageToEdit, setMessageToEdit } = props;\n\n  const { top, left, right, bottom } = useSafeAreaInsets();\n  const { colors } = useUIKitTheme();\n  const { features, mentionManager } = useSendbirdChat();\n\n  const { selection, onSelectionChange, textInputRef, text, onChangeText, mentionedUsers } = useMentionTextInput({\n    messageToEdit,\n  });\n  const inputMode = useIIFE(() => {\n    if (!messageToEdit) return 'send';\n    if (messageToEdit.isFileMessage()) return 'send';\n    return 'edit';\n  });\n\n  const mentionAvailable = features.userMentionEnabled && channel.isGroupChannel() && !channel.isBroadcast;\n  const inputKeyToRemount = GET_INPUT_KEY(mentionAvailable ? mentionedUsers.length === 0 : false);\n\n  const [inputHeight, setInputHeight] = useState(styles.inputDefault.height);\n\n  useTypingTrigger(text, channel);\n  useTextPersistenceOnDisabled(text, onChangeText, props.inputDisabled);\n  useAutoFocusOnEditMode(textInputRef, messageToEdit);\n\n  const onPressToMention = (user: SendbirdMember, searchStringRange: Range) => {\n    const mentionedMessageText = mentionManager.asMentionedMessageText(user, true);\n    const range = { start: searchStringRange.start, end: searchStringRange.start + mentionedMessageText.length - 1 };\n\n    onChangeText(replace(text, searchStringRange.start, searchStringRange.end, mentionedMessageText), { user, range });\n  };\n\n  if (!props.shouldRenderInput) {\n    return <SafeAreaBottom height={bottom} />;\n  }\n\n  return (\n    <>\n      <KeyboardAvoidingView\n        keyboardVerticalOffset={-bottom + keyboardAvoidOffset}\n        behavior={KEYBOARD_AVOID_VIEW_BEHAVIOR}\n      >\n        <View style={{ paddingLeft: left, paddingRight: right, backgroundColor: colors.background }}>\n          <View onLayout={(e) => setInputHeight(e.nativeEvent.layout.height)} style={styles.inputContainer}>\n            {inputMode === 'send' && (\n              <SendInput\n                {...props}\n                key={inputKeyToRemount}\n                ref={textInputRef as never}\n                text={text}\n                onChangeText={onChangeText}\n                onSelectionChange={onSelectionChange}\n                mentionedUsers={mentionedUsers}\n              />\n            )}\n            {inputMode === 'edit' && messageToEdit && (\n              <EditInput\n                {...props}\n                key={inputKeyToRemount}\n                ref={textInputRef as never}\n                text={text}\n                onChangeText={onChangeText}\n                autoFocus={AUTO_FOCUS}\n                onSelectionChange={onSelectionChange}\n                messageToEdit={messageToEdit}\n                mentionedUsers={mentionedUsers}\n                setMessageToEdit={setMessageToEdit}\n              />\n            )}\n          </View>\n          <SafeAreaBottom height={bottom} />\n        </View>\n      </KeyboardAvoidingView>\n      {mentionAvailable && props.SuggestedMentionList && (\n        <props.SuggestedMentionList\n          text={text}\n          selection={selection}\n          inputHeight={inputHeight}\n          topInset={top}\n          bottomInset={bottom}\n          onPressToMention={onPressToMention}\n          mentionedUsers={mentionedUsers}\n        />\n      )}\n    </>\n  );\n};\n\nconst useTypingTrigger = (text: string, channel: SendbirdBaseChannel) => {\n  if (channel.isGroupChannel()) {\n    useEffect(() => {\n      if (text.length === 0) channel.endTyping();\n      else channel.startTyping();\n    }, [text]);\n  }\n};\n\nconst useTextPersistenceOnDisabled = (text: string, setText: (val: string) => void, chatDisabled: boolean) => {\n  const textTmpRef = useRef('');\n\n  useEffect(() => {\n    if (chatDisabled) {\n      textTmpRef.current = text;\n      setText('');\n    } else {\n      setText(textTmpRef.current);\n    }\n  }, [chatDisabled]);\n};\n\nconst useAutoFocusOnEditMode = (\n  textInputRef: MutableRefObject<TextInput | undefined>,\n  messageToEdit?: SendbirdBaseMessage,\n) => {\n  useEffect(() => {\n    if (messageToEdit?.isUserMessage()) {\n      if (!AUTO_FOCUS) setTimeout(() => textInputRef.current?.focus(), 500);\n    }\n  }, [messageToEdit]);\n};\n\nconst SafeAreaBottom = ({ height }: { height: number }) => {\n  return <View style={{ height }} />;\n};\n\nconst styles = createStyleSheet({\n  inputContainer: {\n    justifyContent: 'center',\n    width: '100%',\n  },\n  inputDefault: {\n    height: 56,\n  },\n});\n\nexport default React.memo(ChannelInput);\n"],"mappings":"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"}