{"version":3,"names":["React","useMessageOutgoingStatus","Icon","LoadingSpinner","createStyleSheet","useUIKitTheme","useSendbirdChat","SIZE","MessageOutgoingStatus","_ref","channel","message","isUserMessage","isFileMessage","sdk","colors","outgoingStatus","createElement","size","style","styles","container","icon","color","error","secondary","onBackground03","marginRight","memo"],"sources":["MessageOutgoingStatus.tsx"],"sourcesContent":["import React from 'react';\n\nimport { useMessageOutgoingStatus } from '@sendbird/uikit-chat-hooks';\nimport { Icon, LoadingSpinner, createStyleSheet, useUIKitTheme } from '@sendbird/uikit-react-native-foundation';\nimport type { SendbirdGroupChannel, SendbirdMessage } from '@sendbird/uikit-utils';\n\nimport { useSendbirdChat } from '../../hooks/useContext';\n\nconst SIZE = 16;\n\ntype Props = { channel: SendbirdGroupChannel; message: SendbirdMessage };\nconst MessageOutgoingStatus = ({ channel, message }: Props) => {\n  if (!message.isUserMessage() && !message.isFileMessage()) return null;\n\n  const { sdk } = useSendbirdChat();\n  const { colors } = useUIKitTheme();\n  const outgoingStatus = useMessageOutgoingStatus(sdk, channel, message);\n\n  if (outgoingStatus === 'PENDING') {\n    return <LoadingSpinner size={SIZE} style={styles.container} />;\n  }\n\n  if (outgoingStatus === 'FAILED') {\n    return <Icon icon={'error'} size={SIZE} color={colors.error} style={styles.container} />;\n  }\n\n  if (outgoingStatus === 'READ') {\n    return <Icon icon={'done-all'} size={SIZE} color={colors.secondary} style={styles.container} />;\n  }\n\n  if (outgoingStatus === 'UNREAD' || outgoingStatus === 'DELIVERED') {\n    return <Icon icon={'done-all'} size={SIZE} color={colors.onBackground03} style={styles.container} />;\n  }\n\n  if (outgoingStatus === 'UNDELIVERED') {\n    return <Icon icon={'done'} size={SIZE} color={colors.onBackground03} style={styles.container} />;\n  }\n\n  return null;\n};\n\nconst styles = createStyleSheet({\n  container: {\n    marginRight: 4,\n  },\n});\n\nexport default React.memo(MessageOutgoingStatus);\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,wBAAwB,QAAQ,4BAA4B;AACrE,SAASC,IAAI,EAAEC,cAAc,EAAEC,gBAAgB,EAAEC,aAAa,QAAQ,yCAAyC;AAG/G,SAASC,eAAe,QAAQ,wBAAwB;AAExD,MAAMC,IAAI,GAAG,EAAE;AAGf,MAAMC,qBAAqB,GAAGC,IAAA,IAAiC;EAAA,IAAhC;IAAEC,OAAO;IAAEC;EAAe,CAAC,GAAAF,IAAA;EACxD,IAAI,CAACE,OAAO,CAACC,aAAa,EAAE,IAAI,CAACD,OAAO,CAACE,aAAa,EAAE,EAAE,OAAO,IAAI;EAErE,MAAM;IAAEC;EAAI,CAAC,GAAGR,eAAe,EAAE;EACjC,MAAM;IAAES;EAAO,CAAC,GAAGV,aAAa,EAAE;EAClC,MAAMW,cAAc,GAAGf,wBAAwB,CAACa,GAAG,EAAEJ,OAAO,EAAEC,OAAO,CAAC;EAEtE,IAAIK,cAAc,KAAK,SAAS,EAAE;IAChC,oBAAOhB,KAAA,CAAAiB,aAAA,CAACd,cAAc;MAACe,IAAI,EAAEX,IAAK;MAACY,KAAK,EAAEC,MAAM,CAACC;IAAU,EAAG;EAChE;EAEA,IAAIL,cAAc,KAAK,QAAQ,EAAE;IAC/B,oBAAOhB,KAAA,CAAAiB,aAAA,CAACf,IAAI;MAACoB,IAAI,EAAE,OAAQ;MAACJ,IAAI,EAAEX,IAAK;MAACgB,KAAK,EAAER,MAAM,CAACS,KAAM;MAACL,KAAK,EAAEC,MAAM,CAACC;IAAU,EAAG;EAC1F;EAEA,IAAIL,cAAc,KAAK,MAAM,EAAE;IAC7B,oBAAOhB,KAAA,CAAAiB,aAAA,CAACf,IAAI;MAACoB,IAAI,EAAE,UAAW;MAACJ,IAAI,EAAEX,IAAK;MAACgB,KAAK,EAAER,MAAM,CAACU,SAAU;MAACN,KAAK,EAAEC,MAAM,CAACC;IAAU,EAAG;EACjG;EAEA,IAAIL,cAAc,KAAK,QAAQ,IAAIA,cAAc,KAAK,WAAW,EAAE;IACjE,oBAAOhB,KAAA,CAAAiB,aAAA,CAACf,IAAI;MAACoB,IAAI,EAAE,UAAW;MAACJ,IAAI,EAAEX,IAAK;MAACgB,KAAK,EAAER,MAAM,CAACW,cAAe;MAACP,KAAK,EAAEC,MAAM,CAACC;IAAU,EAAG;EACtG;EAEA,IAAIL,cAAc,KAAK,aAAa,EAAE;IACpC,oBAAOhB,KAAA,CAAAiB,aAAA,CAACf,IAAI;MAACoB,IAAI,EAAE,MAAO;MAACJ,IAAI,EAAEX,IAAK;MAACgB,KAAK,EAAER,MAAM,CAACW,cAAe;MAACP,KAAK,EAAEC,MAAM,CAACC;IAAU,EAAG;EAClG;EAEA,OAAO,IAAI;AACb,CAAC;AAED,MAAMD,MAAM,GAAGhB,gBAAgB,CAAC;EAC9BiB,SAAS,EAAE;IACTM,WAAW,EAAE;EACf;AACF,CAAC,CAAC;AAEF,4BAAe3B,KAAK,CAAC4B,IAAI,CAACpB,qBAAqB,CAAC"}