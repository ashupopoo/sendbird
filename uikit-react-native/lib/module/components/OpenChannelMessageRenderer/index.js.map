{"version":3,"names":["React","Box","OpenChannelMessage","calcMessageGrouping","getMessageType","useLocalization","usePlatformService","SBUUtils","OpenChannelMessageDateSeparator","OpenChannelMessageRenderer","_ref","channel","message","onPress","onLongPress","onPressAvatar","enableMessageGrouping","prevMessage","nextMessage","STRINGS","mediaService","groupWithPrev","Boolean","messageProps","onPressURL","_message$ogMetaData","_message$ogMetaData2","ogMetaData","url","openURL","sender","hideMessageButton","grouped","strings","edited","OPEN_CHANNEL","MESSAGE_BUBBLE_EDITED_POSTFIX","senderName","nickname","LABELS","USER_NO_NAME","sentDate","MESSAGE_BUBBLE_TIME","fileName","isFileMessage","MESSAGE_BUBBLE_FILE_TITLE","unknownTitle","MESSAGE_BUBBLE_UNKNOWN_TITLE","unknownDescription","MESSAGE_BUBBLE_UNKNOWN_DESC","renderMessage","createElement","Admin","_extends","User","OpenGraphUser","File","ImageFile","VideoFile","fetchThumbnailFromVideoSource","uri","getVideoThumbnail","timeMills","Unknown","memo"],"sources":["index.tsx"],"sourcesContent":["import React from 'react';\n\nimport type { OpenChannelMessageProps } from '@sendbird/uikit-react-native-foundation';\nimport { Box, OpenChannelMessage } from '@sendbird/uikit-react-native-foundation';\nimport {\n  SendbirdAdminMessage,\n  SendbirdFileMessage,\n  SendbirdMessage,\n  SendbirdUserMessage,\n  calcMessageGrouping,\n  getMessageType,\n} from '@sendbird/uikit-utils';\n\nimport type { OpenChannelProps } from '../../domain/openChannel/types';\nimport { useLocalization, usePlatformService } from '../../hooks/useContext';\nimport SBUUtils from '../../libs/SBUUtils';\nimport OpenChannelMessageDateSeparator from './OpenChannelMessageDateSeparator';\n\nconst OpenChannelMessageRenderer: OpenChannelProps['Fragment']['renderMessage'] = ({\n  channel,\n  message,\n  onPress,\n  onLongPress,\n  onPressAvatar,\n  enableMessageGrouping,\n  prevMessage,\n  nextMessage,\n}) => {\n  const { STRINGS } = useLocalization();\n  const { mediaService } = usePlatformService();\n  const { groupWithPrev } = calcMessageGrouping(Boolean(enableMessageGrouping), message, prevMessage, nextMessage);\n\n  const messageProps: Omit<OpenChannelMessageProps<SendbirdMessage>, 'message'> = {\n    channel,\n    onPress,\n    onLongPress,\n    onPressURL: () => message.ogMetaData?.url && SBUUtils.openURL(message.ogMetaData?.url),\n    onPressAvatar: () => 'sender' in message && onPressAvatar?.(message.sender, { hideMessageButton: true }),\n    grouped: groupWithPrev,\n    strings: {\n      edited: STRINGS.OPEN_CHANNEL.MESSAGE_BUBBLE_EDITED_POSTFIX,\n      senderName: ('sender' in message && message.sender.nickname) || STRINGS.LABELS.USER_NO_NAME,\n      sentDate: STRINGS.OPEN_CHANNEL.MESSAGE_BUBBLE_TIME(message),\n      fileName: message.isFileMessage() ? STRINGS.OPEN_CHANNEL.MESSAGE_BUBBLE_FILE_TITLE(message) : '',\n      unknownTitle: STRINGS.OPEN_CHANNEL.MESSAGE_BUBBLE_UNKNOWN_TITLE(message),\n      unknownDescription: STRINGS.OPEN_CHANNEL.MESSAGE_BUBBLE_UNKNOWN_DESC(message),\n    },\n  };\n  const renderMessage = () => {\n    switch (getMessageType(message)) {\n      case 'admin': {\n        return <OpenChannelMessage.Admin message={message as SendbirdAdminMessage} {...messageProps} />;\n      }\n      case 'user': {\n        return <OpenChannelMessage.User message={message as SendbirdUserMessage} {...messageProps} />;\n      }\n      case 'user.opengraph': {\n        return <OpenChannelMessage.OpenGraphUser message={message as SendbirdUserMessage} {...messageProps} />;\n      }\n      case 'file':\n      case 'file.audio': {\n        return <OpenChannelMessage.File message={message as SendbirdFileMessage} {...messageProps} />;\n      }\n      case 'file.image': {\n        return <OpenChannelMessage.ImageFile message={message as SendbirdFileMessage} {...messageProps} />;\n      }\n      case 'file.video': {\n        return (\n          <OpenChannelMessage.VideoFile\n            message={message as SendbirdFileMessage}\n            fetchThumbnailFromVideoSource={(uri) => mediaService.getVideoThumbnail({ url: uri, timeMills: 1000 })}\n            {...messageProps}\n          />\n        );\n      }\n      case 'unknown':\n      default: {\n        return <OpenChannelMessage.Unknown message={message} {...messageProps} />;\n      }\n    }\n  };\n\n  return (\n    <Box>\n      <OpenChannelMessageDateSeparator message={message} prevMessage={prevMessage} />\n      {renderMessage()}\n    </Box>\n  );\n};\n\nexport default React.memo(OpenChannelMessageRenderer);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,SAASC,GAAG,EAAEC,kBAAkB,QAAQ,yCAAyC;AACjF,SAKEC,mBAAmB,EACnBC,cAAc,QACT,uBAAuB;AAG9B,SAASC,eAAe,EAAEC,kBAAkB,QAAQ,wBAAwB;AAC5E,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,+BAA+B,MAAM,mCAAmC;AAE/E,MAAMC,0BAAyE,GAAGC,IAAA,IAS5E;EAAA,IAT6E;IACjFC,OAAO;IACPC,OAAO;IACPC,OAAO;IACPC,WAAW;IACXC,aAAa;IACbC,qBAAqB;IACrBC,WAAW;IACXC;EACF,CAAC,GAAAR,IAAA;EACC,MAAM;IAAES;EAAQ,CAAC,GAAGd,eAAe,EAAE;EACrC,MAAM;IAAEe;EAAa,CAAC,GAAGd,kBAAkB,EAAE;EAC7C,MAAM;IAAEe;EAAc,CAAC,GAAGlB,mBAAmB,CAACmB,OAAO,CAACN,qBAAqB,CAAC,EAAEJ,OAAO,EAAEK,WAAW,EAAEC,WAAW,CAAC;EAEhH,MAAMK,YAAuE,GAAG;IAC9EZ,OAAO;IACPE,OAAO;IACPC,WAAW;IACXU,UAAU,EAAEA,CAAA;MAAA,IAAAC,mBAAA,EAAAC,oBAAA;MAAA,OAAM,EAAAD,mBAAA,GAAAb,OAAO,CAACe,UAAU,cAAAF,mBAAA,uBAAlBA,mBAAA,CAAoBG,GAAG,KAAIrB,QAAQ,CAACsB,OAAO,EAAAH,oBAAA,GAACd,OAAO,CAACe,UAAU,cAAAD,oBAAA,uBAAlBA,oBAAA,CAAoBE,GAAG,CAAC;IAAA;IACtFb,aAAa,EAAEA,CAAA,KAAM,QAAQ,IAAIH,OAAO,KAAIG,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAGH,OAAO,CAACkB,MAAM,EAAE;MAAEC,iBAAiB,EAAE;IAAK,CAAC,CAAC;IACxGC,OAAO,EAAEX,aAAa;IACtBY,OAAO,EAAE;MACPC,MAAM,EAAEf,OAAO,CAACgB,YAAY,CAACC,6BAA6B;MAC1DC,UAAU,EAAG,QAAQ,IAAIzB,OAAO,IAAIA,OAAO,CAACkB,MAAM,CAACQ,QAAQ,IAAKnB,OAAO,CAACoB,MAAM,CAACC,YAAY;MAC3FC,QAAQ,EAAEtB,OAAO,CAACgB,YAAY,CAACO,mBAAmB,CAAC9B,OAAO,CAAC;MAC3D+B,QAAQ,EAAE/B,OAAO,CAACgC,aAAa,EAAE,GAAGzB,OAAO,CAACgB,YAAY,CAACU,yBAAyB,CAACjC,OAAO,CAAC,GAAG,EAAE;MAChGkC,YAAY,EAAE3B,OAAO,CAACgB,YAAY,CAACY,4BAA4B,CAACnC,OAAO,CAAC;MACxEoC,kBAAkB,EAAE7B,OAAO,CAACgB,YAAY,CAACc,2BAA2B,CAACrC,OAAO;IAC9E;EACF,CAAC;EACD,MAAMsC,aAAa,GAAGA,CAAA,KAAM;IAC1B,QAAQ9C,cAAc,CAACQ,OAAO,CAAC;MAC7B,KAAK,OAAO;QAAE;UACZ,oBAAOZ,KAAA,CAAAmD,aAAA,CAACjD,kBAAkB,CAACkD,KAAK,EAAAC,QAAA;YAACzC,OAAO,EAAEA;UAAgC,GAAKW,YAAY,EAAI;QACjG;MACA,KAAK,MAAM;QAAE;UACX,oBAAOvB,KAAA,CAAAmD,aAAA,CAACjD,kBAAkB,CAACoD,IAAI,EAAAD,QAAA;YAACzC,OAAO,EAAEA;UAA+B,GAAKW,YAAY,EAAI;QAC/F;MACA,KAAK,gBAAgB;QAAE;UACrB,oBAAOvB,KAAA,CAAAmD,aAAA,CAACjD,kBAAkB,CAACqD,aAAa,EAAAF,QAAA;YAACzC,OAAO,EAAEA;UAA+B,GAAKW,YAAY,EAAI;QACxG;MACA,KAAK,MAAM;MACX,KAAK,YAAY;QAAE;UACjB,oBAAOvB,KAAA,CAAAmD,aAAA,CAACjD,kBAAkB,CAACsD,IAAI,EAAAH,QAAA;YAACzC,OAAO,EAAEA;UAA+B,GAAKW,YAAY,EAAI;QAC/F;MACA,KAAK,YAAY;QAAE;UACjB,oBAAOvB,KAAA,CAAAmD,aAAA,CAACjD,kBAAkB,CAACuD,SAAS,EAAAJ,QAAA;YAACzC,OAAO,EAAEA;UAA+B,GAAKW,YAAY,EAAI;QACpG;MACA,KAAK,YAAY;QAAE;UACjB,oBACEvB,KAAA,CAAAmD,aAAA,CAACjD,kBAAkB,CAACwD,SAAS,EAAAL,QAAA;YAC3BzC,OAAO,EAAEA,OAA+B;YACxC+C,6BAA6B,EAAGC,GAAG,IAAKxC,YAAY,CAACyC,iBAAiB,CAAC;cAAEjC,GAAG,EAAEgC,GAAG;cAAEE,SAAS,EAAE;YAAK,CAAC;UAAE,GAClGvC,YAAY,EAChB;QAEN;MACA,KAAK,SAAS;MACd;QAAS;UACP,oBAAOvB,KAAA,CAAAmD,aAAA,CAACjD,kBAAkB,CAAC6D,OAAO,EAAAV,QAAA;YAACzC,OAAO,EAAEA;UAAQ,GAAKW,YAAY,EAAI;QAC3E;IAAC;EAEL,CAAC;EAED,oBACEvB,KAAA,CAAAmD,aAAA,CAAClD,GAAG,qBACFD,KAAA,CAAAmD,aAAA,CAAC3C,+BAA+B;IAACI,OAAO,EAAEA,OAAQ;IAACK,WAAW,EAAEA;EAAY,EAAG,EAC9EiC,aAAa,EAAE,CACZ;AAEV,CAAC;AAED,4BAAelD,KAAK,CAACgE,IAAI,CAACvD,0BAA0B,CAAC"}