{"version":3,"names":["_react","require","_uikitUtils","defaultReducer","_ref","action","draft","compareByOrder","createCompareByOrder","order","type","refreshing","value","status","loading","getGroupChannels","channels","forEach","freshChannel","idx","groupChannels","findIndex","staleChannel","url","sort","channelUrls","c","splice","clearBeforeAction","useGroupChannelListReducer","dispatch","useReducer","updateChannels","deleteChannels","setChannels","updateLoading","updateRefreshing","updateOrder","exports","undefined","channel1","channel2","lastMessage","createdAt","name","localeCompare"],"sources":["reducer.ts"],"sourcesContent":["import { useReducer } from 'react';\n\nimport type { SendbirdChannel } from '@sendbird/uikit-utils';\nimport { SendbirdGroupChannel, getGroupChannels } from '@sendbird/uikit-utils';\n\ntype Order = 'latest_last_message' | 'chronological' | 'channel_name_alphabetical' | 'metadata_value_alphabetical';\n\ntype Action =\n  | {\n      type: 'update_loading' | 'update_refreshing';\n      value: { status: boolean };\n    }\n  | {\n      type: 'update_channels';\n      value: { channels: SendbirdChannel[] };\n    }\n  | {\n      type: 'delete_channels';\n      value: { channelUrls: string[] };\n    }\n  | {\n      type: 'set_channels';\n      value: { channels: SendbirdChannel[]; clearBeforeAction: boolean };\n    }\n  | {\n      type: 'update_order';\n      value: { order?: Order };\n    };\n\ntype State = {\n  loading: boolean;\n  refreshing: boolean;\n  groupChannels: SendbirdGroupChannel[];\n  order?: Order;\n};\n\nconst defaultReducer = ({ ...draft }: State, action: Action) => {\n  const compareByOrder = createCompareByOrder(draft.order);\n\n  switch (action.type) {\n    case 'update_refreshing': {\n      draft.refreshing = action.value.status;\n      break;\n    }\n    case 'update_loading': {\n      draft.loading = action.value.status;\n      break;\n    }\n    case 'update_channels': {\n      getGroupChannels(action.value.channels).forEach((freshChannel) => {\n        const idx = draft.groupChannels.findIndex((staleChannel) => staleChannel.url === freshChannel.url);\n        if (idx > -1) draft.groupChannels[idx] = freshChannel;\n      });\n\n      compareByOrder && (draft.groupChannels = draft.groupChannels.sort(compareByOrder));\n      break;\n    }\n    case 'delete_channels': {\n      action.value.channelUrls.forEach((url) => {\n        const idx = draft.groupChannels.findIndex((c) => c.url === url);\n        if (idx > -1) draft.groupChannels.splice(idx, 1);\n      });\n\n      compareByOrder && (draft.groupChannels = draft.groupChannels.sort(compareByOrder));\n      break;\n    }\n    case 'set_channels': {\n      if (action.value.clearBeforeAction) {\n        draft.groupChannels = getGroupChannels(action.value.channels);\n      } else {\n        draft.groupChannels = [...draft.groupChannels, ...getGroupChannels(action.value.channels)];\n      }\n\n      compareByOrder && (draft.groupChannels = draft.groupChannels.sort(compareByOrder));\n      break;\n    }\n    case 'update_order': {\n      draft.order = action.value.order;\n      const compareByOrder = createCompareByOrder(draft.order);\n      compareByOrder && (draft.groupChannels = draft.groupChannels.sort(compareByOrder));\n      break;\n    }\n  }\n  return draft;\n};\n\nexport const useGroupChannelListReducer = (order?: Order) => {\n  const [{ loading, refreshing, groupChannels }, dispatch] = useReducer(defaultReducer, {\n    loading: true,\n    refreshing: false,\n    groupChannels: [],\n    order,\n  });\n\n  const updateChannels = (channels: SendbirdChannel[]) => {\n    dispatch({ type: 'update_channels', value: { channels } });\n  };\n  const deleteChannels = (channelUrls: string[]) => {\n    dispatch({ type: 'delete_channels', value: { channelUrls } });\n  };\n  const setChannels = (channels: SendbirdChannel[], clearBeforeAction: boolean) => {\n    dispatch({ type: 'set_channels', value: { channels, clearBeforeAction } });\n  };\n  const updateLoading = (status: boolean) => {\n    dispatch({ type: 'update_loading', value: { status } });\n  };\n  const updateRefreshing = (status: boolean) => {\n    dispatch({ type: 'update_refreshing', value: { status } });\n  };\n  const updateOrder = (order?: Order) => {\n    dispatch({ type: 'update_order', value: { order } });\n  };\n\n  return {\n    updateLoading,\n    updateRefreshing,\n    updateChannels,\n    deleteChannels,\n    setChannels,\n\n    updateOrder,\n\n    loading,\n    refreshing,\n    groupChannels,\n  };\n};\n\nconst createCompareByOrder = (order?: Order) => {\n  if (!order) return undefined;\n\n  return (channel1: SendbirdGroupChannel, channel2: SendbirdGroupChannel): number => {\n    switch (order) {\n      case 'latest_last_message': {\n        if (channel1.lastMessage && channel2.lastMessage) {\n          return channel2.lastMessage.createdAt - channel1.lastMessage.createdAt;\n        } else if (channel1.lastMessage) {\n          return -1;\n        } else if (channel2.lastMessage) {\n          return 1;\n        } else {\n          return channel2.createdAt - channel1.createdAt;\n        }\n      }\n\n      case 'chronological': {\n        return channel2.createdAt - channel1.createdAt;\n      }\n\n      case 'channel_name_alphabetical': {\n        return channel1.name.localeCompare(channel2.name);\n      }\n      default: {\n        return 0;\n      }\n    }\n  };\n};\n"],"mappings":"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"}