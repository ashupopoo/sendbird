{"version":3,"names":["useReducer","arrayToMapWithGetter","getMessageUniqId","isNewMessage","isSendableMessage","useIIFE","defaultReducer","_ref","action","draft","type","value","status","clearBeforeAction","messages","messageKeys","map","it","messageId","reqId","flat","forEach","key","newMessages","filter","currentUserId","messageIds","msgId","reqIds","useChannelMessagesReducer","sortComparator","loading","refreshing","messageMap","newMessageMap","dispatch","updateMessages","deleteMessages","updateNewMessages","deleteNewMessages","updateLoading","updateRefreshing","Object","values","sort"],"sources":["useChannelMessagesReducer.ts"],"sourcesContent":["import { useReducer } from 'react';\n\nimport type { SendbirdBaseMessage } from '@sendbird/uikit-utils';\nimport {\n  SendbirdMessage,\n  arrayToMapWithGetter,\n  getMessageUniqId,\n  isNewMessage,\n  isSendableMessage,\n  useIIFE,\n} from '@sendbird/uikit-utils';\n\ntype Options = {\n  sortComparator?: (a: SendbirdMessage, b: SendbirdMessage) => number;\n};\n\ntype Action =\n  | {\n      type: 'update_loading' | 'update_refreshing';\n      value: { status: boolean };\n    }\n  | {\n      type: 'update_messages' | 'update_new_messages';\n      value: { messages: SendbirdBaseMessage[]; clearBeforeAction: boolean; currentUserId?: string };\n    }\n  | {\n      type: 'delete_messages' | 'delete_new_messages';\n      value: { messageIds: number[]; reqIds: string[] };\n    };\n\ntype State = {\n  loading: boolean;\n  refreshing: boolean;\n  messageMap: Record<string, SendbirdBaseMessage>;\n  newMessageMap: Record<string, SendbirdBaseMessage>;\n};\n\nconst defaultReducer = ({ ...draft }: State, action: Action) => {\n  switch (action.type) {\n    case 'update_refreshing': {\n      draft['refreshing'] = action.value.status;\n      return draft;\n    }\n    case 'update_loading': {\n      draft['loading'] = action.value.status;\n      return draft;\n    }\n    case 'update_messages': {\n      if (action.value.clearBeforeAction) {\n        draft['messageMap'] = arrayToMapWithGetter(action.value.messages, getMessageUniqId);\n      } else {\n        // Remove existing messages before update for prevent duplicate display\n        const messageKeys = action.value.messages\n          .map((it) => (isSendableMessage(it) ? [it.messageId, it.reqId] : [it.messageId]))\n          .flat();\n        messageKeys.forEach((key) => delete draft['messageMap'][key]);\n\n        draft['messageMap'] = {\n          ...draft['messageMap'],\n          ...arrayToMapWithGetter(action.value.messages, getMessageUniqId),\n        };\n      }\n\n      return draft;\n    }\n    case 'update_new_messages': {\n      const newMessages = action.value.messages.filter((it) => isNewMessage(it, action.value.currentUserId));\n\n      if (action.value.clearBeforeAction) {\n        draft['newMessageMap'] = arrayToMapWithGetter(newMessages, getMessageUniqId);\n      } else {\n        // Remove existing messages before update for prevent duplicate display\n        const messageKeys = newMessages.map((it) => it.messageId);\n        messageKeys.forEach((key) => delete draft['newMessageMap'][key]);\n\n        draft['newMessageMap'] = {\n          ...draft['newMessageMap'],\n          ...arrayToMapWithGetter(newMessages, getMessageUniqId),\n        };\n      }\n\n      return draft;\n    }\n    case 'delete_messages':\n    case 'delete_new_messages': {\n      const key = action.type === 'delete_messages' ? 'messageMap' : 'newMessageMap';\n      draft[key] = { ...draft[key] };\n      action.value.messageIds.forEach((msgId) => delete draft[key][msgId]);\n      action.value.reqIds.forEach((reqId) => delete draft[key][reqId]);\n\n      return draft;\n    }\n  }\n};\n\nexport const useChannelMessagesReducer = (sortComparator?: Options['sortComparator']) => {\n  const [{ loading, refreshing, messageMap, newMessageMap }, dispatch] = useReducer(defaultReducer, {\n    loading: true,\n    refreshing: false,\n    messageMap: {},\n    newMessageMap: {},\n  });\n\n  const updateMessages = (messages: SendbirdBaseMessage[], clearBeforeAction: boolean, currentUserId?: string) => {\n    dispatch({ type: 'update_messages', value: { messages, clearBeforeAction, currentUserId } });\n  };\n  const deleteMessages = (messageIds: number[], reqIds: string[]) => {\n    dispatch({ type: 'delete_messages', value: { messageIds, reqIds } });\n  };\n  const updateNewMessages = (messages: SendbirdBaseMessage[], clearBeforeAction: boolean, currentUserId?: string) => {\n    dispatch({ type: 'update_new_messages', value: { messages, clearBeforeAction, currentUserId } });\n  };\n  const deleteNewMessages = (messageIds: number[], reqIds: string[]) => {\n    dispatch({ type: 'delete_new_messages', value: { messageIds, reqIds } });\n  };\n  const updateLoading = (status: boolean) => {\n    dispatch({ type: 'update_loading', value: { status } });\n  };\n  const updateRefreshing = (status: boolean) => {\n    dispatch({ type: 'update_refreshing', value: { status } });\n  };\n\n  const messages = useIIFE(() => {\n    if (sortComparator) return Object.values(messageMap).sort(sortComparator);\n    return Object.values(messageMap);\n  });\n  const newMessages = Object.values(newMessageMap);\n\n  return {\n    updateLoading,\n    updateRefreshing,\n    updateMessages,\n    deleteMessages,\n\n    loading,\n    refreshing,\n    messages,\n\n    newMessages,\n    updateNewMessages,\n    deleteNewMessages,\n  };\n};\n"],"mappings":"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"}